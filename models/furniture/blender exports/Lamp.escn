[gd_scene load_steps=1 format=2]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.7406105399131775, 0.8228667378425598,
		0.8396226167678833, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(1.0);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)

[sub_resource id=3 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(1.0, 0.9137254953384399, 0.5882353186607361,
		1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(1.0);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=4 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(3)

[sub_resource id=5 type="ArrayMesh"]

resource_name = "Mesh lampRoundFloor"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(0.12, 0.0, -0.12, 0.0, 0.0, 0.0, 0.0, 0.0, -0.12, 0.12, 0.0, 0.0, 0.012, 0.02, -0.012, 0.0527415, 0.02, -0.0527415, 0.012, 0.02, -0.108, 0.0527415, 0.02, -0.0527415, 0.012, 0.02, -0.012, 0.108, 0.02, -0.012, 0.0672585, 0.02, -0.0527415, 0.0672585, 0.02, -0.0672585, 0.0527415, 0.02, -0.0672585, 0.012, 0.02, -0.108, 0.0527415, 0.02, -0.0527415, 0.012, 0.02, -0.108, 0.0527415, 0.02, -0.0672585, 0.108, 0.02, -0.108, 0.0690731, 0.76075, -0.0509268, 0.0509268, 0.76075, -0.0690731, 0.0509268, 0.76075, -0.0509268, 0.0690731, 0.76075, -0.0690731, 0.12, 0.0, -0.12, 0.108, 0.02, -0.012, 0.12, 0.0, 0.0, 0.108, 0.02, -0.108, 0.108, 0.02, -0.012, 0.0, 0.0, 0.0, 0.12, 0.0, 0.0, 0.0, 0.0, 0.0, 0.108, 0.02, -0.012, 0.012, 0.02, -0.012, 0.0509268, 0.76075, -0.0690731, 0.0672585, 0.02, -0.0672585, 0.0527415, 0.02, -0.0672585, 0.0672585, 0.02, -0.0672585, 0.0509268, 0.76075, -0.0690731, 0.0690731, 0.76075, -0.0690731, 0.0509268, 0.76075, -0.0690731, 0.0527415, 0.02, -0.0527415, 0.0509268, 0.76075, -0.0509268, 0.0527415, 0.02, -0.0527415, 0.0509268, 0.76075, -0.0690731, 0.0527415, 0.02, -0.0672585, 0.0690731, 0.76075, -0.0509268, 0.0527415, 0.02, -0.0527415, 0.0672585, 0.02, -0.0527415, 0.0527415, 0.02, -0.0527415, 0.0690731, 0.76075, -0.0509268, 0.0509268, 0.76075, -0.0509268, 0.012, 0.02, -0.108, 0.12, 0.0, -0.12, 0.0, 0.0, -0.12, 0.12, 0.0, -0.12, 0.012, 0.02, -0.108, 0.108, 0.02, -0.108, 0.0672585, 0.02, -0.0527415, 0.0690731, 0.76075, -0.0690731, 0.0690731, 0.76075, -0.0509268, 0.0690731, 0.76075, -0.0690731, 0.0672585, 0.02, -0.0527415, 0.0672585, 0.02, -0.0672585, 0.012, 0.02, -0.012, 0.0, 0.0, -0.12, 0.0, 0.0, 0.0, 0.0, 0.0, -0.12, 0.012, 0.02, -0.012, 0.012, 0.02, -0.108),
		Vector3Array(0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -5.95295e-08, 1.0, 0.0, -5.95295e-08, 1.0, 0.0, -5.95295e-08, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 3.93664e-07, 1.0, 0.0, 3.93664e-07, 1.0, 0.0, 3.93664e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.857493, 0.514496, 0.0, 0.857493, 0.514496, 0.0, 0.857493, 0.514496, 0.0, 0.857493, 0.514496, 0.0, 0.0, 0.514496, 0.857493, 0.0, 0.514496, 0.857493, 0.0, 0.514496, 0.857493, 0.0, 0.514496, 0.857493, 0.0, 0.514496, 0.857493, 0.0, 0.514496, 0.857493, 0.0, -0.00244973, -0.999997, 0.0, -0.00244973, -0.999997, 0.0, -0.00244973, -0.999997, 0.0, -0.00244971, -0.999997, 0.0, -0.00244971, -0.999997, 0.0, -0.00244971, -0.999997, -0.999997, -0.00244971, 0.0, -0.999997, -0.00244971, 0.0, -0.999997, -0.00244971, 0.0, -0.999997, -0.00244971, 0.0, -0.999997, -0.00244971, 0.0, -0.999997, -0.00244971, 0.0, 0.0, -0.0024497, 0.999997, 0.0, -0.0024497, 0.999997, 0.0, -0.0024497, 0.999997, 0.0, -0.00244973, 0.999997, 0.0, -0.00244973, 0.999997, 0.0, -0.00244973, 0.999997, 0.0, 0.514496, -0.857493, 0.0, 0.514496, -0.857493, 0.0, 0.514496, -0.857493, 0.0, 0.514496, -0.857493, 0.0, 0.514496, -0.857493, 0.0, 0.514496, -0.857493, 0.999997, -0.00244972, 0.0, 0.999997, -0.00244972, 0.0, 0.999997, -0.00244972, 0.0, 0.999997, -0.00244972, 0.0, 0.999997, -0.00244972, 0.0, 0.999997, -0.00244972, 0.0, -0.857493, 0.514496, 0.0, -0.857493, 0.514496, 0.0, -0.857493, 0.514496, 0.0, -0.857493, 0.514496, 0.0, -0.857493, 0.514496, 0.0, -0.857493, 0.514496, 0.0),
		FloatArray(-1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 5.95295e-08, -9.67711e-08, 1.0, 1.0, 5.95295e-08, -9.67711e-08, 1.0, 1.0, 5.95295e-08, -9.67711e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -4.67824e-08, 1.0, 1.0, 0.0, -3.99962e-08, 1.0, 1.0, 0.0, -4.61235e-08, 1.0, 1.0, -3.93664e-07, -7.99925e-08, 1.0, 1.0, -3.93664e-07, -7.99925e-08, 1.0, 1.0, -3.93664e-07, -7.99925e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -4.83856e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(-4.72441, -3.72441, 0.0, 1.0, 0.0, -3.72441, -4.72441, 1.0, 0.472441, 0.527559, 2.07644, -1.07644, 0.472441, -3.25197, 2.07644, -1.07644, 0.472441, 0.527559, 4.25197, 0.527559, 2.64797, -1.07644, 2.64797, -1.64797, 2.07644, -1.64797, 0.472441, -3.25197, 2.07644, -1.07644, 0.472441, -3.25197, 2.07644, -1.64797, 4.25197, -3.25197, 2.71942, -1.00499, 2.00499, -1.71942, 2.00499, -1.00499, 2.71942, -1.71942, 4.72441, 3.43069, 0.472441, 2.51243, 0.0, 3.43069, 4.25197, 2.51243, 4.25197, 0.0817398, 0.0, 1.0, 4.72441, 1.0, 0.0, 1.0, 4.25197, 0.0817398, 0.472441, 0.0817398, -2.00499, -28.9574, -2.64797, 0.206114, -2.07644, 0.206114, -2.64797, 0.206114, -2.00499, -28.9574, -2.71942, -28.9574, -2.71942, -28.9458, -2.07644, 0.217687, -2.00499, -28.9458, -2.07644, 0.217687, -2.71942, -28.9458, -2.64797, 0.217687, 2.71942, -28.9458, 2.07644, 0.217687, 2.64797, 0.217687, 2.07644, 0.217687, 2.71942, -28.9458, 2.00499, -28.9458, -0.472441, 2.51243, -4.72441, 3.43069, 0.0, 3.43069, -4.72441, 3.43069, -0.472441, 2.51243, -4.25197, 2.51243, 2.07644, 0.206114, 2.71942, -28.9574, 2.00499, -28.9574, 2.71942, -28.9574, 2.07644, 0.206114, 2.64797, 0.206114, -0.472441, 0.0817398, -4.72441, 1.0, 0.0, 1.0, -4.72441, 1.0, -0.472441, 0.0817398, -4.25197, 0.0817398),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 1, 3, 0, 4, 6, 5, 7, 9, 8, 7, 10, 9, 10, 11, 9, 12, 14, 13, 15, 17, 16, 17, 11, 16, 17, 9, 11, 18, 20, 19, 19, 21, 18, 22, 24, 23, 23, 25, 22, 26, 28, 27, 29, 31, 30, 32, 34, 33, 35, 37, 36, 38, 40, 39, 41, 43, 42, 44, 46, 45, 47, 49, 48, 50, 52, 51, 53, 55, 54, 56, 58, 57, 59, 61, 60, 62, 64, 63, 65, 67, 66)
	],
	"morph_arrays":[]
}
surfaces/1 = {
	"material":SubResource(4),
	"primitive":4,
	"arrays":[
		Vector3Array(0.0987994, 0.86, -0.0824008, 0.06, 0.6815, -0.104802, 0.0987994, 0.6815, -0.0824008, 0.06, 0.6815, -0.104802, 0.0987994, 0.86, -0.0824008, 0.06, 0.86, -0.104802, 0.0212006, 0.6815, -0.0824008, 0.0212006, 0.86, -0.0375992, 0.0212006, 0.6815, -0.0375992, 0.0212006, 0.86, -0.0824008, 0.0987994, 0.86, -0.0824008, 0.0987994, 0.6815, -0.0375992, 0.0987994, 0.86, -0.0375992, 0.0987994, 0.6815, -0.0824008, 0.06, 0.86, -0.104802, 0.0212006, 0.6815, -0.0824008, 0.06, 0.6815, -0.104802, 0.0212006, 0.6815, -0.0824008, 0.06, 0.86, -0.104802, 0.0212006, 0.86, -0.0824008, 0.06, 0.86, -0.0151983, 0.0987994, 0.6815, -0.0375992, 0.06, 0.6815, -0.0151983, 0.0987994, 0.6815, -0.0375992, 0.06, 0.86, -0.0151983, 0.0987994, 0.86, -0.0375992, 0.0212006, 0.86, -0.0375992, 0.06, 0.6815, -0.0151983, 0.0212006, 0.6815, -0.0375992, 0.06, 0.6815, -0.0151983, 0.0212006, 0.86, -0.0375992, 0.06, 0.86, -0.0151983, 0.06, 0.6815, -0.14778, 0.0212006, 0.6815, -0.0824008, -0.0160197, 0.6815, -0.10389, 0.0212006, 0.6815, -0.0824008, 0.06, 0.6815, -0.14778, 0.06, 0.6815, -0.104802, 0.06, 0.6815, -0.104802, 0.06, 0.6815, -0.14778, 0.13602, 0.6815, -0.10389, 0.06, 0.6815, -0.104802, 0.13602, 0.6815, -0.10389, 0.0987994, 0.6815, -0.0824008, 0.0987994, 0.6815, -0.0375992, 0.0212006, 0.6815, -0.0375992, -0.0160197, 0.6815, -0.10389, 0.0212006, 0.6815, -0.0824008, 0.0212006, 0.6815, -0.0375992, -0.0160197, 0.6815, -0.01611, -0.0160197, 0.6815, -0.10389, -0.0160197, 0.6815, -0.01611, 0.0212006, 0.6815, -0.0375992, 0.06, 0.6815, 0.02778, 0.06, 0.6815, 0.02778, 0.0212006, 0.6815, -0.0375992, 0.06, 0.6815, -0.0151983, 0.06, 0.6815, 0.02778, 0.06, 0.6815, -0.0151983, 0.13602, 0.6815, -0.01611, 0.13602, 0.6815, -0.01611, 0.06, 0.6815, -0.0151983, 0.0987994, 0.6815, -0.0375992, 0.13602, 0.6815, -0.01611, 0.00602601, 0.86, -0.0288381, 0.0212006, 0.86, -0.0375992, 0.00602601, 0.86, -0.0911619, 0.0212006, 0.86, -0.0375992, 0.00602601, 0.86, -0.0288381, 0.06, 0.86, 0.0023238, 0.0212006, 0.86, -0.0375992, 0.06, 0.86, 0.0023238, 0.06, 0.86, -0.0151983, 0.06, 0.86, -0.0151983, 0.06, 0.86, 0.0023238, 0.113974, 0.86, -0.0288381, 0.06, 0.86, -0.0151983, 0.113974, 0.86, -0.0288381, 0.0987994, 0.86, -0.0375992, 0.0987994, 0.86, -0.0375992, 0.113974, 0.86, -0.0288381, 0.0987994, 0.86, -0.0824008, 0.0212006, 0.86, -0.0824008, 0.00602601, 0.86, -0.0911619, 0.0212006, 0.86, -0.0375992, 0.00602601, 0.86, -0.0911619, 0.0212006, 0.86, -0.0824008, 0.06, 0.86, -0.122324, 0.06, 0.86, -0.122324, 0.0212006, 0.86, -0.0824008, 0.06, 0.86, -0.104802, 0.06, 0.86, -0.122324, 0.06, 0.86, -0.104802, 0.0987994, 0.86, -0.0824008, 0.06, 0.86, -0.122324, 0.0987994, 0.86, -0.0824008, 0.113974, 0.86, -0.0911619, 0.113974, 0.86, -0.0911619, 0.0987994, 0.86, -0.0824008, 0.113974, 0.86, -0.0288381, 0.06, 0.86, 0.0023238, -0.0160197, 0.6815, -0.01611, 0.06, 0.6815, 0.02778, -0.0160197, 0.6815, -0.01611, 0.06, 0.86, 0.0023238, 0.00602601, 0.86, -0.0288381, 0.00602601, 0.86, -0.0288381, -0.0160197, 0.6815, -0.10389, -0.0160197, 0.6815, -0.01611, -0.0160197, 0.6815, -0.10389, 0.00602601, 0.86, -0.0288381, 0.00602601, 0.86, -0.0911619, 0.13602, 0.6815, -0.10389, 0.113974, 0.86, -0.0288381, 0.13602, 0.6815, -0.01611, 0.113974, 0.86, -0.0288381, 0.13602, 0.6815, -0.10389, 0.113974, 0.86, -0.0911619, 0.06, 0.86, -0.122324, 0.13602, 0.6815, -0.10389, 0.06, 0.6815, -0.14778, 0.13602, 0.6815, -0.10389, 0.06, 0.86, -0.122324, 0.113974, 0.86, -0.0911619, 0.113974, 0.86, -0.0288381, 0.06, 0.6815, 0.02778, 0.13602, 0.6815, -0.01611, 0.06, 0.6815, 0.02778, 0.113974, 0.86, -0.0288381, 0.06, 0.86, 0.0023238, 0.00602601, 0.86, -0.0911619, 0.06, 0.6815, -0.14778, -0.0160197, 0.6815, -0.10389, 0.06, 0.6815, -0.14778, 0.00602601, 0.86, -0.0911619, 0.06, 0.86, -0.122324),
		Vector3Array(-0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, -0.5, 0.0, 0.866025, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, 0.5, 0.0, 0.866025, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, -0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, 0.5, 0.0, -0.866025, -5.70104e-07, -1.0, 0.0, -5.70104e-07, -1.0, 0.0, -5.70104e-07, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.14021e-06, -1.0, 0.0, 1.14021e-06, -1.0, 0.0, 1.14021e-06, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.11701e-06, -1.0, 0.0, 1.11701e-06, -1.0, 0.0, 1.11701e-06, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -2.28042e-06, -1.0, 0.0, -2.28042e-06, -1.0, 0.0, -2.28042e-06, -1.0, 0.0, -1.11701e-06, -1.0, 0.0, -1.11701e-06, -1.0, 0.0, -1.11701e-06, -1.0, 0.0, 1.78158e-06, -1.0, 0.0, 1.78158e-06, -1.0, 0.0, 1.78158e-06, -1.0, 0.0, 1.11701e-06, -1.0, 0.0, 1.11701e-06, -1.0, 0.0, 1.11701e-06, -1.0, 0.0, 0.0, -1.0, 0.0, 7.87804e-06, 1.0, 0.0, 7.87804e-06, 1.0, 0.0, 7.87804e-06, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 2.7398e-06, 1.0, 0.0, 2.7398e-06, 1.0, 0.0, 2.7398e-06, 1.0, 0.0, -3.93902e-06, 1.0, 0.0, -3.93902e-06, 1.0, 0.0, -3.93902e-06, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.09592e-05, 1.0, 0.0, 1.09592e-05, 1.0, 0.0, 1.09592e-05, 1.0, 0.0, -1.09592e-05, 1.0, 0.0, -1.09592e-05, 1.0, 0.0, -1.09592e-05, 1.0, 0.0, -7.87805e-06, 1.0, 0.0, -7.87805e-06, 1.0, 0.0, -7.87805e-06, 1.0, 0.0, 5.47959e-06, 1.0, 0.0, 5.47959e-06, 1.0, 0.0, 5.47959e-06, 1.0, 0.0, -5.47959e-06, 1.0, 0.0, -5.47959e-06, 1.0, 0.0, -5.47959e-06, 1.0, 0.0, 3.93903e-06, 1.0, 0.0, 3.93903e-06, 1.0, 0.0, 3.93903e-06, 1.0, 0.0, -7.87805e-06, 1.0, 0.0, -7.87805e-06, 1.0, 0.0, -7.87805e-06, 1.0, 0.0, -0.49623, 0.122574, 0.859495, -0.49623, 0.122574, 0.859495, -0.49623, 0.122574, 0.859495, -0.49623, 0.122574, 0.859495, -0.49623, 0.122574, 0.859495, -0.49623, 0.122574, 0.859495, -0.992459, 0.122574, 0.0, -0.992459, 0.122574, 0.0, -0.992459, 0.122574, 0.0, -0.992459, 0.122574, 0.0, -0.992459, 0.122574, 0.0, -0.992459, 0.122574, 0.0, 0.992459, 0.122574, 0.0, 0.992459, 0.122574, 0.0, 0.992459, 0.122574, 0.0, 0.992459, 0.122574, 0.0, 0.992459, 0.122574, 0.0, 0.992459, 0.122574, 0.0, 0.49623, 0.122574, -0.859495, 0.49623, 0.122574, -0.859495, 0.49623, 0.122574, -0.859495, 0.496229, 0.122574, -0.859495, 0.496229, 0.122574, -0.859495, 0.496229, 0.122574, -0.859495, 0.49623, 0.122574, 0.859495, 0.49623, 0.122574, 0.859495, 0.49623, 0.122574, 0.859495, 0.496229, 0.122574, 0.859495, 0.496229, 0.122574, 0.859495, 0.496229, 0.122574, 0.859495, -0.49623, 0.122574, -0.859495, -0.49623, 0.122574, -0.859495, -0.49623, 0.122574, -0.859495, -0.49623, 0.122574, -0.859495, -0.49623, 0.122574, -0.859495, -0.49623, 0.122574, -0.859495),
		FloatArray(0.866025, 0.0, 0.5, 1.0, 0.866025, 0.0, 0.5, 1.0, 0.866025, 0.0, 0.5, 1.0, 0.866025, 0.0, 0.5, 1.0, 0.866025, 0.0, 0.5, 1.0, 0.866025, 0.0, 0.5, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.866025, 0.0, -0.5, 1.0, 0.866025, 0.0, -0.5, 1.0, 0.866025, 0.0, -0.5, 1.0, 0.866026, 0.0, -0.5, 1.0, 0.866025, 0.0, -0.5, 1.0, 0.866025, 0.0, -0.5, 1.0, -0.866025, 0.0, 0.5, 1.0, -0.866025, 0.0, 0.5, 1.0, -0.866025, 0.0, 0.5, 1.0, -0.866025, 0.0, 0.5, 1.0, -0.866025, 0.0, 0.5, 1.0, -0.866025, 0.0, 0.5, 1.0, -0.866025, 0.0, -0.5, 1.0, -0.866025, 0.0, -0.5, 1.0, -0.866025, 0.0, -0.5, 1.0, -0.866025, 0.0, -0.5, 1.0, -0.866025, 0.0, -0.5, 1.0, -0.866025, 0.0, -0.5, 1.0, -1.0, 5.70104e-07, -1.15845e-07, 1.0, -1.0, 5.70104e-07, -1.15845e-07, 1.0, -1.0, 5.70104e-07, -1.15845e-07, 1.0, -1.0, 0.0, 5.67439e-08, 1.0, -1.0, 0.0, 5.67439e-08, 1.0, -1.0, 0.0, 5.67439e-08, 1.0, -1.0, -1.14021e-06, 5.24923e-08, 1.0, -1.0, -1.14021e-06, 5.24924e-08, 1.0, -1.0, -1.14021e-06, 5.24923e-08, 1.0, -1.0, 0.0, 5.40841e-08, 1.0, -1.0, 0.0, 7.5905e-08, 1.0, -1.0, 0.0, 1.12158e-07, 1.0, -1.0, 0.0, 4.15833e-08, 1.0, -1.0, -1.11701e-06, -1.13488e-07, 1.0, -1.0, -1.11701e-06, -1.13488e-07, 1.0, -1.0, -1.11701e-06, -1.13488e-07, 1.0, -1.0, 0.0, -2.89613e-08, 1.0, -1.0, 0.0, -2.89613e-08, 1.0, -1.0, 0.0, -2.89613e-08, 1.0, -1.0, 2.28042e-06, 0.0, 1.0, -1.0, 2.28042e-06, 0.0, 1.0, -1.0, 2.28042e-06, 0.0, 1.0, -1.0, 1.11701e-06, 0.0, 1.0, -1.0, 1.11701e-06, 0.0, 1.0, -1.0, 1.11701e-06, 0.0, 1.0, -1.0, -1.78158e-06, 5.79226e-08, 1.0, -1.0, -1.78158e-06, 5.79226e-08, 1.0, -1.0, -1.78158e-06, 5.79226e-08, 1.0, -1.0, -1.11701e-06, -8.86624e-10, 1.0, -1.0, -1.11701e-06, -8.86624e-10, 1.0, -1.0, -1.11701e-06, -8.86624e-10, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, -7.87804e-06, 1.00051e-07, 1.0, 1.0, -7.87804e-06, 1.00051e-07, 1.0, 1.0, -7.87804e-06, 1.00051e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -2.7398e-06, 0.0, 1.0, 1.0, -2.7398e-06, 0.0, 1.0, 1.0, -2.7398e-06, 0.0, 1.0, 1.0, 3.93902e-06, -2.50128e-08, 1.0, 1.0, 3.93902e-06, -2.50128e-08, 1.0, 1.0, 3.93902e-06, -2.50128e-08, 1.0, 1.0, 0.0, -3.47954e-08, 1.0, 1.0, 0.0, -3.47954e-08, 1.0, 1.0, 0.0, -3.47954e-08, 1.0, 1.0, -1.09592e-05, -6.95908e-08, 1.0, 1.0, -1.09592e-05, -6.95908e-08, 1.0, 1.0, -1.09592e-05, -6.95908e-08, 1.0, 1.0, 1.09592e-05, 1.39182e-07, 1.0, 1.0, 1.09592e-05, 1.39182e-07, 1.0, 1.0, 1.09592e-05, 1.39182e-07, 1.0, 1.0, 7.87805e-06, 2.50128e-08, 1.0, 1.0, 7.87805e-06, 2.50128e-08, 1.0, 1.0, 7.87805e-06, 2.50128e-08, 1.0, 1.0, -5.47959e-06, 6.95908e-08, 1.0, 1.0, -5.47959e-06, 6.95908e-08, 1.0, 1.0, -5.47959e-06, 6.95908e-08, 1.0, 1.0, 5.47959e-06, -6.95908e-08, 1.0, 1.0, 5.47959e-06, -6.95908e-08, 1.0, 1.0, 5.47959e-06, -6.95908e-08, 1.0, 1.0, -3.93903e-06, 0.0, 1.0, 1.0, -3.93903e-06, 0.0, 1.0, 1.0, -3.93903e-06, 0.0, 1.0, 1.0, 7.87805e-06, -1.00051e-07, 1.0, 1.0, 7.87805e-06, -1.00051e-07, 1.0, 1.0, 7.87805e-06, -1.00051e-07, 1.0, 0.866025, -3.65299e-09, 0.5, 1.0, 0.866025, -3.65299e-09, 0.5, 1.0, 0.866025, -3.65299e-09, 0.5, 1.0, 0.866025, 7.30599e-09, 0.5, 1.0, 0.866025, 7.30599e-09, 0.5, 1.0, 0.866025, 7.30599e-09, 0.5, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -0.866025, 5.11419e-08, -0.5, 1.0, -0.866025, 5.11419e-08, -0.5, 1.0, -0.866025, 5.11419e-08, -0.5, 1.0, -0.866026, -3.28769e-08, -0.5, 1.0, -0.866026, -3.28769e-08, -0.5, 1.0, -0.866026, -3.28769e-08, -0.5, 1.0, 0.866025, 3.65299e-09, -0.5, 1.0, 0.866025, 3.65299e-09, -0.5, 1.0, 0.866025, 3.65299e-09, -0.5, 1.0, 0.866026, 4.01829e-08, -0.5, 1.0, 0.866026, 4.01829e-08, -0.5, 1.0, 0.866026, 4.01829e-08, -0.5, 1.0, -0.866025, 7.30599e-09, 0.5, 1.0, -0.866025, 7.30599e-09, 0.5, 1.0, -0.866025, 7.30599e-09, 0.5, 1.0, -0.866025, 3.653e-09, 0.5, 1.0, -0.866025, 3.653e-09, 0.5, 1.0, -0.866025, 3.653e-09, 0.5, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(1.74655, -32.8583, -0.0172955, -25.8307, 1.74655, -25.8307, -0.0172955, -25.8307, 1.74655, -32.8583, -0.0172955, -32.8583, 3.24413, -25.8307, 1.48028, -32.8583, 1.48028, -25.8307, 3.24413, -32.8583, -3.24413, -32.8583, -1.48028, -25.8307, -1.48028, -32.8583, -3.24413, -25.8307, 4.10875, -32.8583, 2.34491, -25.8307, 4.10875, -25.8307, 2.34491, -25.8307, 4.10875, -32.8583, 2.34491, -32.8583, -2.34491, -32.8583, -4.10875, -25.8307, -2.34491, -25.8307, -4.10875, -25.8307, -2.34491, -32.8583, -4.10875, -32.8583, 0.0172955, -32.8583, -1.74655, -25.8307, 0.0172955, -25.8307, -1.74655, -25.8307, 0.0172955, -32.8583, -1.74655, -32.8583, -2.3622, -4.81811, -0.83467, -2.24413, 0.630697, -3.09016, -0.83467, -2.24413, -2.3622, -4.81811, -2.3622, -3.12605, -2.3622, -3.12605, -2.3622, -4.81811, -5.35511, -3.09016, -2.3622, -3.12605, -5.35511, -3.09016, -3.88974, -2.24413, -3.88974, -0.480282, -0.83467, -0.480282, 0.630697, -3.09016, -0.83467, -2.24413, -0.83467, -0.480282, 0.630697, 0.365748, 0.630697, -3.09016, 0.630697, 0.365748, -0.83467, -0.480282, -2.3622, 2.0937, -2.3622, 2.0937, -0.83467, -0.480282, -2.3622, 0.40164, -2.3622, 2.0937, -2.3622, 0.40164, -5.35511, 0.365748, -5.35511, 0.365748, -2.3622, 0.40164, -3.88974, -0.480282, -5.35511, 0.365748, 0.237244, -0.135358, 0.83467, -0.480282, 0.237244, -2.58905, 0.83467, -0.480282, 0.237244, -0.135358, 2.3622, 1.09149, 0.83467, -0.480282, 2.3622, 1.09149, 2.3622, 0.40164, 2.3622, 0.40164, 2.3622, 1.09149, 4.48716, -0.135358, 2.3622, 0.40164, 4.48716, -0.135358, 3.88974, -0.480282, 3.88974, -0.480282, 4.48716, -0.135358, 3.88974, -2.24413, 0.83467, -2.24413, 0.237244, -2.58905, 0.83467, -0.480282, 0.237244, -2.58905, 0.83467, -2.24413, 2.3622, -3.8159, 2.3622, -3.8159, 0.83467, -2.24413, 2.3622, -3.12605, 2.3622, -3.8159, 2.3622, -3.12605, 3.88974, -2.24413, 2.3622, -3.8159, 3.88974, -2.24413, 4.48716, -2.58905, 4.48716, -2.58905, 3.88974, -2.24413, 4.48716, -0.135358, 2.09147, -32.738, -0.863326, -25.6571, 2.59258, -25.6571, -0.863326, -25.6571, 2.09147, -32.738, -0.36222, -32.738, -1.13536, -32.632, -4.09016, -25.5511, -0.634252, -25.5511, -4.09016, -25.5511, -1.13536, -32.632, -3.58905, -32.632, 4.09016, -24.972, 1.13536, -32.0529, 0.634252, -24.972, 1.13536, -32.0529, 4.09016, -24.972, 3.58905, -32.0529, 0.36222, -31.947, -2.59258, -24.866, 0.863326, -24.866, -2.59258, -24.866, 0.36222, -31.947, -2.09147, -31.947, 4.45368, -32.4485, 1.49888, -25.3675, 4.95478, -25.3675, 1.49888, -25.3675, 4.45368, -32.4485, 1.99999, -32.4485, -1.99999, -32.2365, -4.95478, -25.1556, -1.49888, -25.1556, -4.95478, -25.1556, -1.99999, -32.2365, -4.45368, -32.2365),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 7, 9, 6, 10, 12, 11, 11, 13, 10, 14, 16, 15, 17, 19, 18, 20, 22, 21, 23, 25, 24, 26, 28, 27, 29, 31, 30, 32, 34, 33, 35, 37, 36, 38, 40, 39, 41, 43, 42, 43, 44, 42, 45, 47, 46, 48, 50, 49, 51, 53, 52, 54, 56, 55, 57, 59, 58, 60, 62, 61, 63, 42, 44, 64, 66, 65, 67, 69, 68, 70, 72, 71, 73, 75, 74, 76, 78, 77, 79, 81, 80, 82, 84, 83, 85, 87, 86, 88, 90, 89, 91, 93, 92, 94, 96, 95, 97, 99, 98, 100, 102, 101, 103, 105, 104, 106, 108, 107, 109, 111, 110, 112, 114, 113, 115, 117, 116, 118, 120, 119, 121, 123, 122, 124, 126, 125, 127, 129, 128, 130, 132, 131, 133, 135, 134)
	],
	"morph_arrays":[]
}

[node type="Spatial" name="Scene"]

[node name="lampRoundFloor(Clone)" type="MeshInstance" parent="."]

mesh = SubResource(5)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)
