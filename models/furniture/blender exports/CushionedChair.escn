[gd_scene load_steps=1 format=2]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.8962264060974121, 0.6015712022781372,
		0.39315590262413025, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(1.0);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)

[sub_resource id=3 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.9433962106704712, 0.36717596650123596,
		0.34264859557151794, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(1.0);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=4 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(3)

[sub_resource id=5 type="ArrayMesh"]

resource_name = "Mesh chairCushion"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(0.03, 0.07, -0.11, 0.17, 0.05, -0.11, 0.03, 0.05, -0.11, 0.17, 0.07, -0.11, 0.19, 0.05, -0.16, 0.17, 0.05, -0.11, 0.17, 0.05, -0.16, 0.17, 0.05, -0.11, 0.19, 0.05, -0.16, 0.17, 0.05, -0.09, 0.17, 0.05, -0.09, 0.19, 0.05, -0.16, 0.17, 0.05, -0.04, 0.19, 0.05, -0.04, 0.03, 0.05, -0.09, 0.17, 0.05, -0.09, 0.17, 0.05, -0.11, 0.03, 0.05, -0.09, 0.03, 0.05, -0.11, 0.03, 0.05, -0.04, 0.03, 0.05, -0.11, 0.03, 0.05, -0.09, 0.03, 0.05, -0.16, 0.01, 0.05, -0.04, 0.03, 0.05, -0.16, 0.03, 0.05, -0.04, 0.01, 0.05, -0.16, 0.2, 0.0, -0.04, 0.16, 0.0, 0.0, 0.16, 0.0, -0.04, 0.2, 0.0, 0.0, 0.04, 0.24, -0.16, 0.04, 0.295, -0.17, 0.04, 0.39, -0.16, 0.04, 0.24, -0.2, 0.04, 0.295, -0.19, 0.04, 0.335, -0.19, 0.04, 0.335, -0.17, 0.04, 0.39, -0.2, 0.16, 0.19, -0.04, 0.16, 0.0, 0.0, 0.16, 0.19, 0.0, 0.16, 0.0, -0.04, 0.17, 0.07, -0.09, 0.03, 0.05, -0.09, 0.17, 0.05, -0.09, 0.03, 0.07, -0.09, 0.04, 0.335, -0.19, 0.16, 0.295, -0.19, 0.04, 0.295, -0.19, 0.16, 0.335, -0.19, 0.0, 0.0, -0.04, 0.0, 0.0, 0.0, 0.0, 0.19, -0.04, 0.0, 0.22, 0.0, 0.0, 0.19, -0.04, 0.0, 0.0, 0.0, 0.0, 0.22, -0.16, 0.0, 0.19, -0.16, 0.0, 0.46, -0.2, 0.0, 0.24, -0.16, 0.0, 0.46, -0.16, 0.0, 0.0, -0.16, 0.0, 0.0, -0.2, 0.2, 0.19, -0.16, 0.16, 0.19, -0.04, 0.16, 0.19, -0.16, 0.2, 0.19, -0.04, 0.16, 0.19, 0.0, 0.16, 0.19, -0.16, 0.16, 0.19, -0.04, 0.16, 0.19, -0.2, 0.04, 0.19, 0.0, 0.16, 0.19, -0.2, 0.16, 0.19, 0.0, 0.04, 0.19, -0.04, 0.04, 0.19, -0.16, 0.16, 0.19, -0.2, 0.04, 0.19, -0.04, 0.16, 0.19, -0.2, 0.04, 0.19, -0.16, 0.04, 0.19, -0.2, 0.0, 0.19, -0.04, 0.0, 0.19, -0.16, 0.16, 0.335, -0.17, 0.04, 0.335, -0.19, 0.04, 0.335, -0.17, 0.16, 0.335, -0.19, 0.0, 0.46, -0.2, 0.04, 0.0, -0.2, 0.0, 0.0, -0.2, 0.04, 0.19, -0.2, 0.04, 0.22, -0.2, 0.16, 0.19, -0.2, 0.04, 0.24, -0.2, 0.04, 0.39, -0.2, 0.04, 0.39, -0.2, 0.0, 0.46, -0.2, 0.04, 0.43, -0.2, 0.04, 0.39, -0.2, 0.04, 0.43, -0.2, 0.16, 0.39, -0.2, 0.0, 0.46, -0.2, 0.04, 0.46, -0.2, 0.16, 0.22, -0.2, 0.2, 0.46, -0.2, 0.2, 0.0, -0.2, 0.16, 0.19, -0.2, 0.2, 0.0, -0.2, 0.16, 0.0, -0.2, 0.16, 0.24, -0.2, 0.16, 0.43, -0.2, 0.16, 0.46, -0.2, 0.2, 0.22, 0.0, 0.16, 0.0, 0.0, 0.2, 0.0, 0.0, 0.16, 0.0, 0.0, 0.2, 0.22, 0.0, 0.16, 0.19, 0.0, 0.16, 0.19, 0.0, 0.04, 0.19, 0.0, 0.0, 0.22, 0.0, 0.0, 0.0, 0.0, 0.04, 0.19, 0.0, 0.0, 0.0, 0.0, 0.04, 0.0, 0.0, 0.16, 0.295, -0.17, 0.04, 0.335, -0.17, 0.04, 0.295, -0.17, 0.16, 0.335, -0.17, 0.16, 0.295, -0.19, 0.04, 0.295, -0.17, 0.04, 0.295, -0.19, 0.16, 0.295, -0.17, 0.04, 0.0, -0.2, 0.0, 0.0, -0.16, 0.0, 0.0, -0.2, 0.04, 0.0, -0.16, 0.04, 0.0, -0.04, 0.0, 0.0, 0.0, 0.0, 0.0, -0.04, 0.04, 0.0, 0.0, 0.04, 0.0, -0.2, 0.04, 0.05, -0.16, 0.04, 0.0, -0.16, 0.04, 0.05, -0.16, 0.04, 0.0, -0.2, 0.04, 0.19, -0.16, 0.04, 0.19, -0.16, 0.04, 0.0, -0.2, 0.04, 0.19, -0.2, 0.16, 0.39, -0.16, 0.16, 0.335, -0.17, 0.16, 0.24, -0.16, 0.16, 0.39, -0.2, 0.16, 0.335, -0.19, 0.16, 0.295, -0.19, 0.16, 0.295, -0.17, 0.16, 0.24, -0.2, 0.16, 0.19, -0.2, 0.16, 0.0, -0.16, 0.16, 0.19, -0.16, 0.16, 0.0, -0.2, 0.2, 0.0, -0.2, 0.16, 0.0, -0.16, 0.16, 0.0, -0.2, 0.2, 0.0, -0.16, 0.19, 0.07, -0.04, 0.17, 0.07, -0.09, 0.17, 0.07, -0.04, 0.19, 0.07, -0.16, 0.17, 0.07, -0.09, 0.19, 0.07, -0.04, 0.17, 0.07, -0.16, 0.17, 0.07, -0.09, 0.19, 0.07, -0.16, 0.17, 0.07, -0.11, 0.17, 0.07, -0.09, 0.17, 0.07, -0.16, 0.03, 0.07, -0.11, 0.17, 0.07, -0.11, 0.03, 0.07, -0.11, 0.03, 0.07, -0.09, 0.03, 0.07, -0.16, 0.03, 0.07, -0.09, 0.03, 0.07, -0.11, 0.03, 0.07, -0.04, 0.01, 0.07, -0.16, 0.03, 0.07, -0.04, 0.03, 0.07, -0.16, 0.01, 0.07, -0.04, 0.2, 0.46, -0.16, 0.16, 0.24, -0.16, 0.2, 0.24, -0.16, 0.16, 0.39, -0.16, 0.16, 0.43, -0.16, 0.04, 0.39, -0.16, 0.16, 0.46, -0.16, 0.04, 0.43, -0.16, 0.0, 0.46, -0.16, 0.04, 0.39, -0.16, 0.04, 0.43, -0.16, 0.0, 0.24, -0.16, 0.04, 0.39, -0.16, 0.0, 0.46, -0.16, 0.04, 0.24, -0.16, 0.0, 0.46, -0.16, 0.04, 0.46, -0.16, 0.04, 0.46, -0.16, 0.0, 0.46, -0.2, 0.0, 0.46, -0.16, 0.04, 0.46, -0.2, 0.2, 0.46, -0.16, 0.16, 0.46, -0.2, 0.16, 0.46, -0.16, 0.2, 0.46, -0.2, 0.16, 0.43, -0.16, 0.04, 0.43, -0.2, 0.04, 0.43, -0.16, 0.16, 0.43, -0.2, 0.16, 0.46, -0.2, 0.16, 0.43, -0.16, 0.16, 0.46, -0.16, 0.16, 0.43, -0.2, 0.04, 0.43, -0.2, 0.04, 0.46, -0.16, 0.04, 0.43, -0.16, 0.04, 0.46, -0.2, 0.16, 0.39, -0.2, 0.04, 0.39, -0.16, 0.04, 0.39, -0.2, 0.16, 0.39, -0.16, 0.04, 0.0, -0.04, 0.04, 0.19, 0.0, 0.04, 0.0, 0.0, 0.04, 0.19, -0.04, 0.17, 0.07, -0.16, 0.17, 0.05, -0.11, 0.17, 0.07, -0.11, 0.17, 0.05, -0.16, 0.01, 0.07, -0.16, 0.01, 0.05, -0.04, 0.01, 0.07, -0.04, 0.01, 0.05, -0.16, 0.17, 0.07, -0.09, 0.17, 0.05, -0.04, 0.17, 0.07, -0.04, 0.17, 0.05, -0.09, 0.03, 0.05, -0.04, 0.03, 0.07, -0.09, 0.03, 0.07, -0.04, 0.03, 0.05, -0.09, 0.0, 0.0, -0.04, 0.01, 0.05, -0.04, 0.04, 0.0, -0.04, 0.0, 0.19, -0.04, 0.01, 0.07, -0.04, 0.03, 0.07, -0.04, 0.03, 0.05, -0.04, 0.04, 0.19, -0.04, 0.03, 0.05, -0.16, 0.03, 0.07, -0.11, 0.03, 0.05, -0.11, 0.03, 0.07, -0.16, 0.04, 0.19, -0.16, 0.03, 0.05, -0.16, 0.04, 0.05, -0.16, 0.03, 0.05, -0.16, 0.04, 0.19, -0.16, 0.03, 0.07, -0.16, 0.01, 0.07, -0.16, 0.01, 0.05, -0.16, 0.04, 0.05, -0.16, 0.03, 0.05, -0.16, 0.0, 0.0, -0.16, 0.04, 0.05, -0.16, 0.01, 0.05, -0.16, 0.04, 0.0, -0.16, 0.0, 0.19, -0.16, 0.19, 0.05, -0.16, 0.19, 0.07, -0.04, 0.19, 0.05, -0.04, 0.19, 0.07, -0.16, 0.16, 0.0, -0.04, 0.17, 0.05, -0.04, 0.2, 0.0, -0.04, 0.16, 0.19, -0.04, 0.17, 0.05, -0.04, 0.16, 0.19, -0.04, 0.17, 0.07, -0.04, 0.17, 0.07, -0.04, 0.16, 0.19, -0.04, 0.19, 0.07, -0.04, 0.19, 0.05, -0.04, 0.2, 0.19, -0.04, 0.2, 0.0, -0.2, 0.2, 0.19, -0.16, 0.2, 0.0, -0.16, 0.2, 0.22, -0.16, 0.2, 0.22, -0.16, 0.2, 0.0, -0.2, 0.2, 0.24, -0.16, 0.2, 0.24, -0.16, 0.2, 0.0, -0.2, 0.2, 0.46, -0.16, 0.2, 0.46, -0.16, 0.2, 0.0, -0.2, 0.2, 0.46, -0.2, 0.2, 0.19, -0.04, 0.2, 0.22, 0.0, 0.2, 0.0, -0.04, 0.2, 0.0, 0.0, 0.2, 0.0, -0.16, 0.19, 0.05, -0.16, 0.16, 0.0, -0.16, 0.2, 0.19, -0.16, 0.19, 0.05, -0.16, 0.2, 0.19, -0.16, 0.19, 0.07, -0.16, 0.19, 0.07, -0.16, 0.2, 0.19, -0.16, 0.17, 0.07, -0.16, 0.17, 0.05, -0.16, 0.16, 0.19, -0.16),
		Vector3Array(0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 4.37114e-08, -1.0, -4.79658e-05, -4.37114e-08, -1.0, -4.79658e-05, 4.37114e-08, -1.0, -4.76718e-05, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -4.37114e-08, -1.0, -4.79658e-05, 4.77711e-05, -1.0, -2.29138e-09, -4.37114e-08, -1.0, -4.79658e-05, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -2.58701e-07, -1.0, 0.0, -2.58701e-07, -1.0, 0.0, -2.58701e-07, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.66308e-07, 1.0, 0.0, -1.66308e-07, 1.0, 0.0, -1.66308e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.94026e-07, 1.0, 0.0, 1.94026e-07, 1.0, 0.0, 1.94026e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 4.37114e-08, 1.0, 4.79658e-05, 0.0, 1.0, 0.0, 4.37114e-08, 1.0, 4.76718e-05, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -4.76718e-05, -4.37114e-08, 1.0, 4.79658e-05, -4.37114e-08, 1.0, 4.79658e-05, -4.37114e-08, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 9.31321e-06, 1.0, 0.0, 9.31321e-06, 1.0, 0.0, 9.31321e-06, 1.0, 0.0, -1.69331e-06, 1.0, 0.0, -1.69331e-06, 1.0, 0.0, -1.69331e-06, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0),
		FloatArray(-1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 2.36556e-07, 1.0, -1.0, 0.0, 2.36556e-07, 1.0, -1.0, 0.0, 2.36556e-07, 1.0, -1.0, 0.0, 7.56979e-07, 1.0, -1.0, 0.0, 3.07772e-07, 1.0, -1.0, 0.0, 7.95864e-08, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, -1.15564e-07, -1.0, 1.0, 0.0, -5.59239e-07, -1.0, 1.0, 0.0, 4.55223e-08, -1.0, 1.0, 0.0, 1.24381e-07, -1.0, 1.0, 0.0, 2.08146e-06, -1.0, 1.0, 0.0, -2.32238e-07, -1.0, 1.0, 0.0, 1.48675e-06, -1.0, 1.0, 0.0, -5.77818e-08, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -7.61712e-08, 1.0, 1.0, 0.0, -1.14959e-07, 1.0, 1.0, 0.0, -2.58061e-07, 1.0, 1.0, 0.0, -1.10826e-06, 1.0, 1.0, 0.0, 4.2759e-07, 1.0, 1.0, 0.0, 3.25861e-08, 1.0, 1.0, 0.0, 2.08146e-06, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 4.39997e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 2.58701e-07, 0.0, 1.0, -1.0, 2.58701e-07, 0.0, 1.0, -1.0, 2.58701e-07, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, -3.5776e-07, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 5.90654e-08, 0.0, 1.0, -1.0, 8.09435e-07, 0.0, 1.0, -1.0, -1.64762e-07, 0.0, 1.0, -1.0, -2.10072e-06, 0.0, 1.0, -1.0, -5.04653e-07, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 2.80839e-07, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, -2.19165e-06, 0.0, 1.0, -1.0, 1.21818e-07, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 4.77687e-06, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -3.9841e-07, 0.0, 1.0, 1.0, -3.9841e-07, 0.0, 1.0, 1.0, -3.9841e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.53278e-07, 0.0, 1.0, 1.0, 1.01562e-07, 0.0, 1.0, 1.0, 3.44081e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -1.66308e-07, 1.35175e-07, -1.0, 1.0, -1.66308e-07, 1.35175e-07, -1.0, 1.0, -1.66308e-07, 1.35175e-07, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, -5.77817e-08, 1.0, 1.0, 0.0, -2.32238e-07, 1.0, 1.0, 0.0, 1.24381e-07, 1.0, 1.0, 0.0, 4.55223e-08, 1.0, 1.0, 0.0, 1.48675e-06, 1.0, 1.0, 0.0, -5.59239e-07, 1.0, 1.0, 0.0, 2.08146e-06, 1.0, 1.0, 0.0, -1.15564e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -1.94026e-07, 0.0, 1.0, 1.0, -1.94026e-07, 0.0, 1.0, 1.0, -1.94026e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -1.09005e-07, 0.0, 1.0, 1.0, -5.77819e-08, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -2.80839e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 5.70847e-08, 0.0, 1.0, 1.0, 3.09889e-07, 0.0, 1.0, 1.0, 3.44081e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -1.0, 5.00666e-08, 0.0, 1.0, -1.0, 2.85844e-07, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 3.94652e-08, 0.0, 1.0, -1.0, 1.84236e-06, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 2.83867e-06, 0.0, 1.0, 1.0, 2.24052e-08, 0.0, 1.0, 1.0, 1.84236e-06, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -1.0, 5.00666e-08, 0.0, 1.0, -1.0, 2.46621e-07, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 3.9841e-07, 0.0, 1.0, -1.0, 2.83867e-06, 0.0, 1.0, -1.0, 2.83867e-06, 0.0, 1.0, -1.0, 2.83867e-06, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, -3.76079e-08, -1.0, 1.0, 0.0, -1.1783e-06, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, -1.02474e-07, -1.0, 1.0, 9.31321e-06, 3.31178e-06, -1.0, 1.0, 9.31321e-06, 3.31178e-06, -1.0, 1.0, 9.31321e-06, 3.31178e-06, -1.0, 1.0, -1.69331e-06, -6.88163e-07, -1.0, 1.0, -1.69331e-06, -6.88163e-07, -1.0, 1.0, -1.69331e-06, -6.88163e-07, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 1.40406e-07, -1.0, 1.0, 0.0, 7.10917e-08, -1.0, 1.0, 0.0, 3.42129e-08, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 5.00666e-08, 0.0, 1.0, 1.0, 2.46621e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 3.9841e-07, 0.0, 1.0, 1.0, 2.83867e-06, 0.0, 1.0, 1.0, 2.83867e-06, 0.0, 1.0, 1.0, 2.83867e-06, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(-1.1811, -1.75591, -6.69291, -0.968504, -1.1811, -0.968504, -6.69291, -1.75591, -7.48031, -5.29921, -6.69291, -3.33071, -6.69291, -5.29921, -6.69291, -3.33071, -7.48031, -5.29921, -6.69291, -2.54331, -6.69291, -2.54331, -7.48031, -5.29921, -6.69291, -0.574803, -7.48031, -0.574803, -1.1811, -2.54331, -6.69291, -2.54331, -6.69291, -3.33071, -1.1811, -2.54331, -1.1811, -3.33071, -1.1811, -0.574803, -1.1811, -3.33071, -1.1811, -2.54331, -1.1811, -5.29921, -0.393701, -0.574803, -1.1811, -5.29921, -1.1811, -0.574803, -0.393701, -5.29921, -7.87402, -0.574803, -6.29921, 1.0, -6.29921, -0.574803, -7.87402, 1.0, 6.29921, -8.44882, 6.69291, -10.6142, 6.29921, -14.3543, 7.87402, -8.44882, 7.48031, -10.6142, 7.48031, -12.189, 6.69291, -12.189, 7.87402, -14.3543, -1.5748, -6.48031, 0.0, 1.0, 0.0, -6.48031, -1.5748, 1.0, 6.69291, -1.75591, 1.1811, -0.968504, 6.69291, -0.968504, 1.1811, -1.75591, -1.5748, -12.189, -6.29921, -10.6142, -1.5748, -10.6142, -6.29921, -12.189, -1.5748, 1.0, 0.0, 1.0, -1.5748, -6.48031, 0.0, -7.66142, -1.5748, -6.48031, 0.0, 1.0, -6.29921, -7.66142, -6.29921, -6.48031, -7.87402, -17.1102, -6.29921, -8.44882, -6.29921, -17.1102, -6.29921, 1.0, -7.87402, 1.0, -7.87402, -5.29921, -6.29921, -0.574803, -6.29921, -5.29921, -7.87402, -0.574803, -6.29921, 1.0, -6.29921, -5.29921, -6.29921, -0.574803, -6.29921, -6.87402, -1.5748, 1.0, -6.29921, -6.87402, -6.29921, 1.0, -1.5748, -0.574803, -1.5748, -5.29921, -6.29921, -6.87402, -1.5748, -0.574803, -6.29921, -6.87402, -1.5748, -5.29921, -1.5748, -6.87402, 0.0, -0.574803, 0.0, -5.29921, 6.29921, -5.69291, 1.5748, -6.48031, 1.5748, -5.69291, 6.29921, -6.48031, 0.0, -17.1102, -1.5748, 1.0, 0.0, 1.0, -1.5748, -6.48031, -1.5748, -7.66142, -6.29921, -6.48031, -1.5748, -8.44882, -1.5748, -14.3543, -1.5748, -14.3543, 0.0, -17.1102, -1.5748, -15.9291, -1.5748, -14.3543, -1.5748, -15.9291, -6.29921, -14.3543, 0.0, -17.1102, -1.5748, -17.1102, -6.29921, -7.66142, -7.87402, -17.1102, -7.87402, 1.0, -6.29921, -6.48031, -7.87402, 1.0, -6.29921, 1.0, -6.29921, -8.44882, -6.29921, -15.9291, -6.29921, -17.1102, 7.87402, -7.66142, 6.29921, 1.0, 7.87402, 1.0, 6.29921, 1.0, 7.87402, -7.66142, 6.29921, -6.48031, 6.29921, -6.48031, 1.5748, -6.48031, 0.0, -7.66142, 0.0, 1.0, 1.5748, -6.48031, 0.0, 1.0, 1.5748, 1.0, 6.29921, -10.6142, 1.5748, -12.189, 1.5748, -10.6142, 6.29921, -12.189, -6.29921, -6.48031, -1.5748, -5.69291, -1.5748, -6.48031, -6.29921, -5.69291, -1.5748, -6.87402, 0.0, -5.29921, 0.0, -6.87402, -1.5748, -5.29921, -1.5748, -0.574803, 0.0, 1.0, 0.0, -0.574803, -1.5748, 1.0, 7.87402, 1.0, 6.29921, -0.968504, 6.29921, 1.0, 6.29921, -0.968504, 7.87402, 1.0, 6.29921, -6.48031, 6.29921, -6.48031, 7.87402, 1.0, 7.87402, -6.48031, -6.29921, -14.3543, -6.69291, -12.189, -6.29921, -8.44882, -7.87402, -14.3543, -7.48031, -12.189, -7.48031, -10.6142, -6.69291, -10.6142, -7.87402, -8.44882, -7.87402, -6.48031, -6.29921, 1.0, -6.29921, -6.48031, -7.87402, 1.0, -7.87402, -6.87402, -6.29921, -5.29921, -6.29921, -6.87402, -7.87402, -5.29921, 7.48031, -0.574803, 6.69291, -2.54331, 6.69291, -0.574803, 7.48031, -5.29921, 6.69291, -2.54331, 7.48031, -0.574803, 6.69291, -5.29921, 6.69291, -2.54331, 7.48031, -5.29921, 6.69291, -3.33071, 6.69291, -2.54331, 6.69291, -5.29921, 1.1811, -3.33071, 6.69291, -3.33071, 1.1811, -3.33071, 1.1811, -2.54331, 1.1811, -5.29921, 1.1811, -2.54331, 1.1811, -3.33071, 1.1811, -0.574803, 0.393701, -5.29921, 1.1811, -0.574803, 1.1811, -5.29921, 0.393701, -0.574803, 7.87402, -17.1102, 6.29921, -8.44882, 7.87402, -8.44882, 6.29921, -14.3543, 6.29921, -15.9291, 1.5748, -14.3543, 6.29921, -17.1102, 1.5748, -15.9291, 0.0, -17.1102, 1.5748, -14.3543, 1.5748, -15.9291, 0.0, -8.44882, 1.5748, -14.3543, 0.0, -17.1102, 1.5748, -8.44882, 0.0, -17.1102, 1.5748, -17.1102, 1.5748, -5.29921, 0.0, -6.87402, 0.0, -5.29921, 1.5748, -6.87402, 7.87402, -5.29921, 6.29921, -6.87402, 6.29921, -5.29921, 7.87402, -6.87402, 6.29921, -5.29921, 1.5748, -6.87402, 1.5748, -5.29921, 6.29921, -6.87402, -7.87402, -17.1102, -6.29921, -15.9291, -6.29921, -17.1102, -7.87402, -15.9291, 7.87402, -15.9291, 6.29921, -17.1102, 6.29921, -15.9291, 7.87402, -17.1102, -6.29921, -6.87402, -1.5748, -5.29921, -1.5748, -6.87402, -6.29921, -5.29921, 1.5748, 1.0, 0.0, -6.48031, 0.0, 1.0, 1.5748, -6.48031, -6.29921, -1.75591, -4.33071, -0.968504, -4.33071, -1.75591, -6.29921, -0.968504, -6.29921, -1.75591, -1.5748, -0.968504, -1.5748, -1.75591, -6.29921, -0.968504, -3.54331, -1.75591, -1.5748, -0.968504, -1.5748, -1.75591, -3.54331, -0.968504, 1.5748, -0.968504, 3.54331, -1.75591, 1.5748, -1.75591, 3.54331, -0.968504, -7.28438e-15, 1.0, -0.393701, -0.968504, -1.5748, 1.0, -7.28438e-15, -6.48031, -0.393701, -1.75591, -1.1811, -1.75591, -1.1811, -0.968504, -1.5748, -6.48031, 6.29921, -0.968504, 4.33071, -1.75591, 4.33071, -0.968504, 6.29921, -1.75591, 1.5748, -6.48031, 1.1811, -0.968504, 1.5748, -0.968504, 1.1811, -0.968504, 1.5748, -6.48031, 1.1811, -1.75591, 0.393701, -1.75591, 0.393701, -0.968504, 1.5748, -0.968504, 1.1811, -0.968504, 0.0, 1.0, 1.5748, -0.968504, 0.393701, -0.968504, 1.5748, 1.0, 0.0, -6.48031, 6.29921, -0.968504, 1.5748, -1.75591, 1.5748, -0.968504, 6.29921, -1.75591, -6.29921, 1.0, -6.69291, -0.968504, -7.87402, 1.0, -6.29921, -6.48031, -6.69291, -0.968504, -6.29921, -6.48031, -6.69291, -1.75591, -6.69291, -1.75591, -6.29921, -6.48031, -7.48031, -1.75591, -7.48031, -0.968504, -7.87402, -6.48031, 7.87402, 1.0, 6.29921, -6.48031, 6.29921, 1.0, 6.29921, -7.66142, 6.29921, -7.66142, 7.87402, 1.0, 6.29921, -8.44882, 6.29921, -8.44882, 7.87402, 1.0, 6.29921, -17.1102, 6.29921, -17.1102, 7.87402, 1.0, 7.87402, -17.1102, 1.5748, -6.48031, 0.0, -7.66142, 1.5748, 1.0, -6.30692e-15, 1.0, 7.87402, 1.0, 7.48031, -0.968504, 6.29921, 1.0, 7.87402, -6.48031, 7.48031, -0.968504, 7.87402, -6.48031, 7.48031, -1.75591, 7.48031, -1.75591, 7.87402, -6.48031, 6.69291, -1.75591, 6.69291, -0.968504, 6.29921, -6.48031),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 1, 3, 0, 4, 6, 5, 7, 9, 8, 10, 12, 11, 12, 13, 11, 14, 15, 5, 16, 18, 17, 19, 21, 20, 19, 20, 22, 23, 25, 24, 24, 26, 23, 27, 29, 28, 28, 30, 27, 31, 33, 32, 32, 34, 31, 32, 35, 34, 35, 36, 34, 37, 32, 33, 33, 38, 37, 38, 36, 37, 38, 34, 36, 39, 41, 40, 40, 42, 39, 43, 45, 44, 44, 46, 43, 47, 49, 48, 48, 50, 47, 51, 53, 52, 54, 56, 55, 55, 57, 54, 55, 58, 57, 57, 58, 59, 60, 57, 59, 59, 61, 60, 58, 62, 59, 62, 63, 59, 64, 66, 65, 65, 67, 64, 68, 70, 69, 68, 69, 71, 72, 74, 73, 75, 72, 73, 76, 78, 77, 79, 81, 80, 82, 75, 80, 80, 83, 82, 84, 86, 85, 85, 87, 84, 88, 90, 89, 89, 91, 88, 91, 92, 88, 91, 93, 92, 92, 94, 88, 94, 95, 88, 96, 98, 97, 99, 101, 100, 100, 103, 102, 104, 92, 93, 105, 104, 93, 106, 105, 93, 107, 109, 108, 105, 110, 104, 105, 101, 110, 105, 111, 101, 111, 100, 101, 105, 112, 111, 113, 115, 114, 116, 118, 117, 119, 120, 113, 121, 113, 120, 122, 121, 120, 123, 125, 124, 126, 128, 127, 127, 129, 126, 130, 132, 131, 131, 133, 130, 134, 136, 135, 135, 137, 134, 138, 140, 139, 139, 141, 138, 142, 144, 143, 145, 147, 146, 148, 150, 149, 151, 153, 152, 152, 154, 151, 152, 155, 154, 155, 156, 154, 157, 152, 153, 153, 158, 157, 158, 156, 157, 158, 154, 156, 159, 161, 160, 160, 162, 159, 163, 165, 164, 164, 166, 163, 167, 169, 168, 170, 172, 171, 173, 175, 174, 176, 178, 177, 179, 180, 174, 168, 182, 181, 183, 185, 184, 183, 184, 186, 187, 189, 188, 188, 190, 187, 191, 193, 192, 192, 194, 191, 194, 195, 191, 194, 196, 195, 195, 197, 191, 198, 195, 196, 199, 201, 200, 202, 204, 203, 203, 205, 202, 206, 207, 198, 208, 210, 209, 209, 211, 208, 212, 214, 213, 213, 215, 212, 216, 218, 217, 217, 219, 216, 220, 222, 221, 221, 223, 220, 224, 226, 225, 225, 227, 224, 228, 230, 229, 229, 231, 228, 232, 234, 233, 233, 235, 232, 236, 238, 237, 237, 239, 236, 240, 242, 241, 241, 243, 240, 244, 246, 245, 245, 247, 244, 248, 250, 249, 249, 251, 248, 252, 254, 253, 253, 255, 252, 253, 256, 255, 256, 257, 255, 258, 253, 254, 254, 259, 258, 259, 257, 258, 259, 255, 257, 260, 262, 261, 261, 263, 260, 264, 266, 265, 267, 269, 268, 269, 270, 268, 271, 273, 272, 274, 276, 275, 275, 277, 274, 274, 278, 276, 278, 270, 276, 278, 268, 270, 279, 281, 280, 280, 282, 279, 283, 285, 284, 284, 286, 283, 287, 289, 288, 290, 292, 291, 293, 284, 285, 285, 294, 293, 294, 292, 293, 294, 291, 292, 295, 297, 296, 296, 298, 295, 299, 301, 300, 302, 304, 303, 305, 307, 306, 298, 296, 308, 309, 298, 308, 309, 308, 310, 310, 311, 309, 312, 314, 313, 313, 315, 312, 316, 318, 317, 319, 321, 320, 322, 313, 314, 314, 323, 322, 323, 321, 322, 323, 320, 321)
	],
	"morph_arrays":[]
}
surfaces/1 = {
	"material":SubResource(4),
	"primitive":4,
	"arrays":[
		Vector3Array(0.2, 0.24, 0.0, 0.0, 0.24, -0.16, 0.0, 0.24, 0.0, 0.0, 0.24, -0.16, 0.2, 0.24, 0.0, 0.04, 0.24, -0.16, 0.04, 0.24, -0.16, 0.2, 0.24, 0.0, 0.04, 0.24, -0.2, 0.16, 0.24, -0.16, 0.2, 0.24, -0.16, 0.16, 0.24, -0.2, 0.04, 0.24, -0.2, 0.16, 0.22, -0.2, 0.04, 0.22, -0.2, 0.16, 0.24, -0.2, 0.0, 0.24, -0.16, 0.0, 0.22, 0.0, 0.0, 0.24, 0.0, 0.0, 0.22, -0.16, 0.2, 0.24, 0.0, 0.0, 0.22, 0.0, 0.2, 0.22, 0.0, 0.0, 0.24, 0.0, 0.2, 0.22, -0.16, 0.2, 0.24, 0.0, 0.2, 0.22, 0.0, 0.2, 0.24, -0.16),
		Vector3Array(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0),
		FloatArray(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, -2.10072e-06, 0.0, 1.0, -1.0, -2.19165e-06, 0.0, 1.0, -1.0, 8.09435e-07, 0.0, 1.0, -1.0, 4.77687e-06, 0.0, 1.0, 0.0, 2.08146e-06, 1.0, 1.0, 0.0, -7.61712e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -1.10826e-06, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.01562e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.02474e-07, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 7.10917e-08, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(7.87402, 1.0, 0.0, -5.29921, 0.0, 1.0, 0.0, -5.29921, 7.87402, 1.0, 1.5748, -5.29921, 1.5748, -5.29921, 7.87402, 1.0, 1.5748, -6.87402, 6.29921, -5.29921, 7.87402, -5.29921, 6.29921, -6.87402, -1.5748, -8.44882, -6.29921, -7.66142, -1.5748, -7.66142, -6.29921, -8.44882, -6.29921, -8.44882, 0.0, -7.66142, 0.0, -8.44882, -6.29921, -7.66142, 7.87402, -8.44882, 0.0, -7.66142, 7.87402, -7.66142, 0.0, -8.44882, 6.29921, -7.66142, 0.0, -8.44882, 0.0, -7.66142, 6.29921, -8.44882),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 8, 9, 7, 9, 10, 7, 11, 9, 8, 12, 14, 13, 13, 15, 12, 16, 18, 17, 17, 19, 16, 20, 22, 21, 21, 23, 20, 24, 26, 25, 25, 27, 24)
	],
	"morph_arrays":[]
}

[node type="Spatial" name="Scene"]

[node name="chairCushion(Clone)" type="MeshInstance" parent="."]

mesh = SubResource(5)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)
