[gd_scene load_steps=1 format=2]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.35617658495903015, 0.5166400074958801,
		0.8679245114326477, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.5);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(1.0);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)

[sub_resource id=3 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.7406105399131775, 0.8228667378425598,
		0.8396226167678833, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(1.0);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=4 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(3)

[sub_resource id=5 type="ArrayMesh"]

resource_name = "Mesh loungeDesignSofa"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(-0.56, 0.201957, -0.208064, 0.56, -0.0780433, -0.208064, -0.56, -0.0780433, -0.208064, 0.56, -0.0780433, -0.208064, -0.56, 0.201957, -0.208064, -0.399829, 0.201957, -0.208064, 0.56, -0.0780433, -0.208064, -0.399829, 0.201957, -0.208064, 0.56, 0.201957, -0.208064, 0.56, 0.201957, -0.208064, -0.399829, 0.201957, -0.208064, 0.399828, 0.201957, -0.208064, 0.399828, 0.201957, -0.208064, -0.399829, 0.201957, -0.208064, -0.399829, 0.271957, -0.208064, 0.399828, 0.201957, -0.208064, -0.399829, 0.271957, -0.208064, 0.399828, 0.271957, -0.208064, 0.399828, 0.101957, 0.201936, -0.399829, -0.0780433, 0.201936, 0.399828, -0.0780433, 0.201936, -0.399829, 0.101957, 0.201936, 0.399828, -0.0780433, 0.181936, 0.399828, 0.101957, 0.201936, 0.399828, -0.0780433, 0.201936, 0.399828, 0.101957, 0.181936, -0.399829, 0.101957, 0.181936, -0.399829, -0.0780433, 0.201936, -0.399829, 0.101957, 0.201936, -0.399829, -0.0780433, 0.181936, 0.399828, 0.271957, -0.117892, -0.399829, 0.271957, -0.208064, -0.399829, 0.271957, -0.117892, 0.399828, 0.271957, -0.208064, -0.56, 0.201957, -0.208064, -0.56, -0.0780433, 0.181936, -0.56, 0.201957, 0.181936, -0.56, -0.0780433, -0.208064, -0.399829, -0.0780433, 0.181936, -0.56, 0.201957, 0.181936, -0.56, -0.0780433, 0.181936, -0.399829, 0.101957, 0.181936, -0.399829, 0.201957, 0.181936, 0.56, -0.0780433, -0.208064, -0.54251, -0.0780433, -0.190574, -0.56, -0.0780433, -0.208064, -0.49251, -0.0780433, -0.190574, -0.49251, -0.0780433, -0.140574, 0.49251, -0.0780433, -0.190574, -0.49251, -0.0780433, 0.114446, -0.49251, -0.0780433, 0.114446, 0.49251, -0.0780433, -0.190574, -0.49251, -0.0780433, 0.164446, -0.49251, -0.0780433, 0.164446, 0.49251, -0.0780433, -0.190574, -0.399829, -0.0780433, 0.181936, -0.399829, -0.0780433, 0.181936, 0.49251, -0.0780433, -0.190574, -0.399829, -0.0780433, 0.201936, -0.399829, -0.0780433, 0.201936, 0.49251, -0.0780433, -0.190574, 0.399828, -0.0780433, 0.181936, 0.54251, -0.0780433, -0.190574, 0.54251, -0.0780433, -0.140574, 0.54251, -0.0780433, -0.140574, 0.56, -0.0780433, -0.208064, 0.54251, -0.0780433, 0.114446, 0.54251, -0.0780433, 0.114446, 0.56, -0.0780433, -0.208064, 0.54251, -0.0780433, 0.164446, 0.49251, -0.0780433, 0.164446, 0.399828, -0.0780433, 0.181936, 0.49251, -0.0780433, -0.190574, 0.399828, -0.0780433, 0.181936, 0.49251, -0.0780433, 0.164446, 0.56, -0.0780433, 0.181936, 0.54251, -0.0780433, 0.164446, 0.56, -0.0780433, 0.181936, 0.54251, -0.0780433, 0.164446, 0.56, -0.0780433, -0.208064, 0.49251, -0.0780433, 0.164446, 0.49251, -0.0780433, -0.190574, 0.49251, -0.0780433, -0.140574, 0.49251, -0.0780433, 0.114446, 0.54251, -0.0780433, -0.140574, 0.49251, -0.0780433, 0.114446, 0.49251, -0.0780433, -0.140574, 0.54251, -0.0780433, 0.114446, -0.399829, -0.0780433, 0.181936, -0.54251, -0.0780433, 0.164446, -0.49251, -0.0780433, 0.164446, -0.56, -0.0780433, 0.181936, -0.54251, -0.0780433, 0.164446, -0.56, -0.0780433, 0.181936, -0.56, -0.0780433, -0.208064, -0.54251, -0.0780433, 0.164446, -0.56, -0.0780433, -0.208064, -0.54251, -0.0780433, -0.190574, -0.54251, -0.0780433, 0.164446, -0.54251, -0.0780433, -0.190574, -0.54251, -0.0780433, -0.140574, -0.54251, -0.0780433, 0.114446, -0.54251, -0.0780433, 0.114446, -0.54251, -0.0780433, -0.140574, 0.399828, -0.0780433, 0.201936, -0.399829, -0.0780433, 0.201936, 0.56, -0.0780433, -0.208064, 0.56, 0.201957, 0.181936, 0.56, -0.0780433, 0.181936, 0.56, 0.201957, -0.208064, 0.399828, 0.201957, -0.208064, 0.399828, 0.271957, -0.117892, 0.399828, 0.201957, -0.10193, 0.399828, 0.271957, -0.208064, 0.56, 0.201957, 0.181936, 0.399828, 0.201957, -0.10193, 0.399828, 0.201957, 0.181936, 0.399828, 0.201957, -0.10193, 0.56, 0.201957, 0.181936, 0.399828, 0.201957, -0.208064, 0.399828, 0.201957, -0.208064, 0.56, 0.201957, 0.181936, 0.56, 0.201957, -0.208064, -0.399829, 0.271957, -0.117892, -0.399829, 0.201957, -0.208064, -0.399829, 0.201957, -0.10193, -0.399829, 0.271957, -0.208064, -0.399829, 0.201957, 0.181936, -0.56, 0.201957, -0.208064, -0.56, 0.201957, 0.181936, -0.399829, 0.201957, -0.208064, -0.399829, 0.201957, -0.208064, -0.399829, 0.201957, 0.181936, -0.399829, 0.201957, -0.10193, 0.56, -0.0780433, 0.181936, 0.399828, 0.101957, 0.181936, 0.399828, -0.0780433, 0.181936, 0.56, 0.201957, 0.181936, 0.399828, 0.201957, 0.181936, 0.399828, 0.201957, -0.10193, 0.399828, 0.101957, 0.181936, 0.399828, 0.201957, 0.181936, 0.399828, 0.101957, 0.181936, 0.399828, 0.201957, -0.10193, 0.399828, 0.101957, -0.0791256, 0.399828, 0.101957, 0.201936, -0.399829, 0.101957, 0.181936, -0.399829, 0.101957, 0.201936, -0.399829, 0.101957, 0.181936, 0.399828, 0.101957, 0.201936, -0.399829, 0.101957, -0.0791256, -0.399829, 0.101957, -0.0791256, 0.399828, 0.101957, 0.201936, 0.399828, 0.101957, -0.0791256, 0.399828, 0.101957, -0.0791256, 0.399828, 0.101957, 0.201936, 0.399828, 0.101957, 0.181936, -0.399829, 0.101957, -0.0791256, -0.399829, 0.201957, 0.181936, -0.399829, 0.101957, 0.181936, -0.399829, 0.201957, -0.10193, 0.399828, 0.201957, -0.10193, -0.399829, 0.101957, -0.0791256, 0.399828, 0.101957, -0.0791256, -0.399829, 0.201957, -0.10193, -0.399829, 0.201957, -0.10193, 0.399828, 0.201957, -0.10193, 0.399828, 0.271957, -0.117892, -0.399829, 0.201957, -0.10193, 0.399828, 0.271957, -0.117892, -0.399829, 0.271957, -0.117892),
		Vector3Array(0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -3.32259e-07, -1.0, 0.0, -3.32259e-07, -1.0, 0.0, -3.32259e-07, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 4.76718e-05, -4.37114e-08, -1.0, -4.79658e-05, -4.37114e-08, -1.0, -4.79658e-05, -4.37114e-08, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 7.56389e-08, -1.0, 0.0, 7.56389e-08, -1.0, 0.0, 7.56389e-08, -1.0, 0.0, -7.431e-08, -1.0, 0.0, -7.431e-08, -1.0, 0.0, -7.431e-08, -1.0, 0.0, 2.08738e-07, -1.0, 0.0, 2.08738e-07, -1.0, 0.0, 2.08738e-07, -1.0, 0.0, -1.25843e-08, -1.0, 0.0, -1.25843e-08, -1.0, 0.0, -1.25843e-08, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 4.2599e-06, -1.0, 0.0, 4.2599e-06, -1.0, 0.0, 4.2599e-06, -1.0, 0.0, 1.13218e-07, -1.0, 0.0, 1.13218e-07, -1.0, 0.0, 1.13218e-07, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -5.46141e-07, -1.0, 0.0, -5.46141e-07, -1.0, 0.0, -5.46141e-07, -1.0, 0.0, -1.0, 4.37114e-08, 4.76718e-05, 4.37114e-08, 1.0, -4.79658e-05, 4.37114e-08, 1.0, -4.79658e-05, 1.0, -4.37114e-08, -4.79658e-05, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 5.46143e-07, -1.0, 0.0, 5.46143e-07, -1.0, 0.0, 5.46143e-07, -1.0, 0.0, -7.49943e-08, -1.0, 0.0, -7.49943e-08, -1.0, 0.0, -7.49943e-08, -1.0, 0.0, -1.0, 4.37114e-08, 4.76718e-05, 4.37114e-08, 1.0, -4.79658e-05, 4.37114e-08, 1.0, -4.79658e-05, 1.0, -4.37114e-08, -4.79658e-05, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -8.76555e-07, 1.0, 0.0, -8.76555e-07, 1.0, 0.0, -8.76555e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.78449e-08, 1.0, 0.0, 1.78449e-08, 1.0, 0.0, 1.78449e-08, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 4.37114e-08, -1.0, -4.76718e-05, 4.37114e-08, -1.0, 4.79658e-05, 4.37114e-08, -1.0, 4.79658e-05, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.222332, 0.974971, 0.0, 0.222332, 0.974971, 0.0, 0.222332, 0.974971, 0.0, 0.222332, 0.974971, 0.0, 0.222332, 0.974971, 0.0, 0.222332, 0.974971, 0.0, 0.222332, 0.974971, 0.0, 0.222333, 0.974971, 0.0, 0.222333, 0.974971, 0.0, 0.222333, 0.974971),
		FloatArray(-1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, -3.4741e-08, 0.0, 1.0, 1.0, -3.29667e-08, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -7.11696e-08, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 4.25684e-07, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 6.05685e-09, 1.0, -1.0, 0.0, -2.77787e-09, 1.0, -1.0, 0.0, -7.17289e-08, 1.0, -1.0, 0.0, -1.07799e-08, 1.0, -1.0, -7.56389e-08, 0.0, 1.0, -1.0, -7.56389e-08, 0.0, 1.0, -1.0, -7.56389e-08, 0.0, 1.0, -1.0, 7.431e-08, 0.0, 1.0, -1.0, 7.431e-08, 0.0, 1.0, -1.0, 7.431e-08, 0.0, 1.0, -1.0, -2.08738e-07, 8.48309e-08, 1.0, -1.0, -2.08738e-07, 8.48309e-08, 1.0, -1.0, -2.08738e-07, 8.48309e-08, 1.0, -1.0, 1.25843e-08, -5.11426e-09, 1.0, -1.0, 1.25843e-08, -5.11426e-09, 1.0, -1.0, 1.25843e-08, -5.11426e-09, 1.0, -1.0, 0.0, 5.41007e-07, 1.0, -1.0, 0.0, 1.08201e-06, 1.0, -1.0, 0.0, -6.78858e-07, 1.0, -1.0, 0.0, -6.78858e-07, 1.0, -1.0, 0.0, -6.78858e-07, 1.0, -1.0, -4.2599e-06, 0.0, 1.0, -1.0, -4.2599e-06, 0.0, 1.0, -1.0, -4.2599e-06, 0.0, 1.0, -1.0, -1.13218e-07, 0.0, 1.0, -1.0, -1.13218e-07, 0.0, 1.0, -1.0, -1.13218e-07, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 5.46141e-07, 0.0, 1.0, -1.0, 5.46141e-07, 0.0, 1.0, -1.0, 5.46141e-07, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, -5.46143e-07, 0.0, 1.0, -1.0, -5.46143e-07, 0.0, 1.0, -1.0, -5.46143e-07, 0.0, 1.0, -1.0, 7.49943e-08, 0.0, 1.0, -1.0, 7.49943e-08, 0.0, 1.0, -1.0, 7.49943e-08, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 8.76555e-07, -7.12464e-07, 1.0, 1.0, 8.76555e-07, -7.12464e-07, 1.0, 1.0, 8.76555e-07, -7.12464e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.56275e-08, 0.0, 1.0, 1.0, 1.50622e-08, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 2.17632e-08, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -1.78449e-08, -7.25215e-09, 1.0, 1.0, -1.78449e-08, -7.25215e-09, 1.0, 1.0, -1.78449e-08, -7.25215e-09, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(-3.462e-15, -11.9921, -44.0945, -0.968504, -3.18837e-14, -0.968504, -44.0945, -0.968504, -3.462e-15, -11.9921, -6.30596, -11.9921, -44.0945, -0.968504, -6.30596, -11.9921, -44.0945, -11.9921, -44.0945, -11.9921, -6.30596, -11.9921, -37.7885, -11.9921, -37.7885, -11.9921, -6.30596, -11.9921, -6.30596, -14.748, -37.7885, -11.9921, -6.30596, -14.748, -37.7885, -14.748, 37.7885, -8.05512, 6.30596, -0.968504, 37.7885, -0.968504, 6.30596, -8.05512, 0.787402, -0.968504, 0.0, -8.05512, 0.0, -0.968504, 0.787402, -8.05512, -0.787402, -8.05512, 0.0, -0.968504, 0.0, -8.05512, -0.787402, -0.968504, 37.7885, -11.5917, 6.30596, -15.1417, 6.30596, -11.5917, 37.7885, -15.1417, -16.1417, -11.9921, -0.787402, -0.968504, -0.787402, -11.9921, -16.1417, -0.968504, 6.30596, -0.968504, 0.0, -11.9921, 0.0, -0.968504, 6.30596, -8.05512, 6.30596, -11.9921, -44.0945, -15.1417, -0.688583, -14.4531, -2.85793e-14, -15.1417, -2.65709, -14.4531, -2.65709, -12.4846, -41.4374, -14.4531, -2.65709, -2.44449, -2.65709, -2.44449, -41.4374, -14.4531, -2.65709, -0.475984, -2.65709, -0.475984, -41.4374, -14.4531, -6.30596, 0.212598, -6.30596, 0.212598, -41.4374, -14.4531, -6.30596, 1.0, -6.30596, 1.0, -41.4374, -14.4531, -37.7885, 0.212598, -43.4059, -14.4531, -43.4059, -12.4846, -43.4059, -12.4846, -44.0945, -15.1417, -43.4059, -2.44449, -43.4059, -2.44449, -44.0945, -15.1417, -43.4059, -0.475984, -41.4374, -0.475984, -37.7885, 0.212598, -41.4374, -14.4531, -37.7885, 0.212598, -41.4374, -0.475984, -44.0945, 0.212598, -43.4059, -0.475984, -44.0945, 0.212598, -43.4059, -0.475984, -44.0945, -15.1417, -41.4374, -0.475984, -41.4374, -14.4531, -41.4374, -12.4846, -41.4374, -2.44449, -43.4059, -12.4846, -41.4374, -2.44449, -41.4374, -12.4846, -43.4059, -2.44449, -6.30596, 0.212598, -0.688583, -0.475984, -2.65709, -0.475984, 0.0, 0.212598, -0.688583, -0.475984, 0.0, 0.212598, -2.85793e-14, -15.1417, -0.688583, -0.475984, -2.85793e-14, -15.1417, -0.688583, -14.4531, -0.688583, -0.475984, -0.688583, -14.4531, -0.688583, -12.4846, -0.688583, -2.44449, -0.688583, -2.44449, -0.688583, -12.4846, -37.7885, 1.0, -6.30596, 1.0, 16.1417, -0.968504, 0.787402, -11.9921, 0.787402, -0.968504, 16.1417, -11.9921, 16.1417, -11.9921, 12.5917, -14.748, 11.9632, -11.9921, 16.1417, -14.748, 44.0945, 0.212598, 37.7885, -10.9632, 37.7885, 0.212598, 37.7885, -10.9632, 44.0945, 0.212598, 37.7885, -15.1417, 37.7885, -15.1417, 44.0945, 0.212598, 44.0945, -15.1417, -12.5917, -14.748, -16.1417, -11.9921, -11.9632, -11.9921, -16.1417, -14.748, 6.30596, 0.212598, 5.8112e-15, -15.1417, 5.8112e-15, 0.212598, 6.30596, -15.1417, 6.30596, -15.1417, 6.30596, 0.212598, 6.30596, -10.9632, 44.0945, -0.968504, 37.7885, -8.05512, 37.7885, -0.968504, 44.0945, -11.9921, 37.7885, -11.9921, -11.9632, -11.9921, -0.787402, -8.05512, -0.787402, -11.9921, -0.787402, -8.05512, -11.9632, -11.9921, -11.0654, -8.05512, 37.7885, 1.0, 6.30596, 0.212598, 6.30596, 1.0, 6.30596, 0.212598, 37.7885, 1.0, 6.30596, -10.0654, 6.30596, -10.0654, 37.7885, 1.0, 37.7885, -10.0654, 37.7885, -10.0654, 37.7885, 1.0, 37.7885, 0.212598, 11.0654, -8.05512, 0.787402, -11.9921, 0.787402, -8.05512, 11.9632, -11.9921, 37.7885, -14.3268, 6.30596, -10.2887, 37.7885, -10.2887, 6.30596, -14.3268, 6.30596, -14.3268, 37.7885, -14.3268, 37.7885, -17.1534, 6.30596, -14.3268, 37.7885, -17.1534, 6.30596, -17.1534),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 19, 21, 18, 22, 24, 23, 23, 25, 22, 26, 28, 27, 27, 29, 26, 30, 32, 31, 31, 33, 30, 34, 36, 35, 35, 37, 34, 38, 40, 39, 39, 41, 38, 39, 42, 41, 43, 45, 44, 44, 46, 43, 46, 47, 43, 47, 48, 43, 47, 49, 48, 50, 52, 51, 53, 55, 54, 56, 58, 57, 59, 61, 60, 48, 62, 43, 62, 63, 43, 64, 66, 65, 67, 69, 68, 70, 72, 71, 73, 75, 74, 75, 76, 74, 77, 79, 78, 80, 82, 81, 80, 83, 82, 84, 86, 85, 85, 87, 84, 88, 90, 89, 91, 88, 89, 92, 94, 93, 95, 97, 96, 98, 100, 99, 98, 101, 100, 47, 103, 102, 102, 49, 47, 104, 73, 105, 106, 108, 107, 107, 109, 106, 110, 112, 111, 111, 113, 110, 114, 116, 115, 117, 119, 118, 120, 122, 121, 123, 125, 124, 124, 126, 123, 127, 129, 128, 128, 130, 127, 131, 133, 132, 134, 136, 135, 135, 137, 134, 135, 138, 137, 139, 141, 140, 142, 144, 143, 145, 147, 146, 148, 150, 149, 151, 153, 152, 154, 156, 155, 157, 159, 158, 158, 160, 157, 161, 163, 162, 162, 164, 161, 165, 167, 166, 168, 170, 169)
	],
	"morph_arrays":[]
}
surfaces/1 = {
	"material":SubResource(4),
	"primitive":4,
	"arrays":[
		Vector3Array(0.535, -0.128043, -0.148084, 0.54251, -0.0780433, -0.190574, 0.54251, -0.0780433, -0.140574, 0.54251, -0.0780433, -0.190574, 0.535, -0.128043, -0.148084, 0.535, -0.128043, -0.183064, 0.535, -0.128043, -0.183064, 0.50002, -0.128043, -0.148084, 0.50002, -0.128043, -0.183064, 0.535, -0.128043, -0.148084, 0.49251, -0.0780433, -0.190574, 0.535, -0.128043, -0.183064, 0.50002, -0.128043, -0.183064, 0.535, -0.128043, -0.183064, 0.49251, -0.0780433, -0.190574, 0.54251, -0.0780433, -0.190574, 0.54251, -0.0780433, -0.140574, 0.50002, -0.128043, -0.148084, 0.535, -0.128043, -0.148084, 0.50002, -0.128043, -0.148084, 0.54251, -0.0780433, -0.140574, 0.49251, -0.0780433, -0.140574, 0.49251, -0.0780433, -0.190574, 0.50002, -0.128043, -0.148084, 0.49251, -0.0780433, -0.140574, 0.50002, -0.128043, -0.148084, 0.49251, -0.0780433, -0.190574, 0.50002, -0.128043, -0.183064, 0.49251, -0.0780433, 0.114446, 0.50002, -0.128043, 0.156936, 0.49251, -0.0780433, 0.164446, 0.50002, -0.128043, 0.156936, 0.49251, -0.0780433, 0.114446, 0.50002, -0.128043, 0.121956, 0.535, -0.128043, 0.156936, 0.54251, -0.0780433, 0.114446, 0.54251, -0.0780433, 0.164446, 0.54251, -0.0780433, 0.114446, 0.535, -0.128043, 0.156936, 0.535, -0.128043, 0.121956, 0.54251, -0.0780433, 0.164446, 0.50002, -0.128043, 0.156936, 0.535, -0.128043, 0.156936, 0.50002, -0.128043, 0.156936, 0.54251, -0.0780433, 0.164446, 0.49251, -0.0780433, 0.164446, 0.49251, -0.0780433, 0.114446, 0.535, -0.128043, 0.121956, 0.50002, -0.128043, 0.121956, 0.535, -0.128043, 0.121956, 0.49251, -0.0780433, 0.114446, 0.54251, -0.0780433, 0.114446, 0.535, -0.128043, 0.121956, 0.50002, -0.128043, 0.156936, 0.50002, -0.128043, 0.121956, 0.535, -0.128043, 0.156936, -0.49251, -0.0780433, -0.140574, -0.535, -0.128043, -0.148084, -0.50002, -0.128043, -0.148084, -0.535, -0.128043, -0.148084, -0.49251, -0.0780433, -0.140574, -0.54251, -0.0780433, -0.140574, -0.54251, -0.0780433, -0.190574, -0.50002, -0.128043, -0.183064, -0.535, -0.128043, -0.183064, -0.50002, -0.128043, -0.183064, -0.54251, -0.0780433, -0.190574, -0.49251, -0.0780433, -0.190574, -0.54251, -0.0780433, -0.190574, -0.535, -0.128043, -0.148084, -0.54251, -0.0780433, -0.140574, -0.535, -0.128043, -0.148084, -0.54251, -0.0780433, -0.190574, -0.535, -0.128043, -0.183064, -0.50002, -0.128043, -0.183064, -0.535, -0.128043, -0.148084, -0.535, -0.128043, -0.183064, -0.50002, -0.128043, -0.148084, -0.50002, -0.128043, -0.148084, -0.49251, -0.0780433, -0.190574, -0.49251, -0.0780433, -0.140574, -0.49251, -0.0780433, -0.190574, -0.50002, -0.128043, -0.148084, -0.50002, -0.128043, -0.183064, -0.50002, -0.128043, 0.121956, -0.535, -0.128043, 0.156936, -0.535, -0.128043, 0.121956, -0.50002, -0.128043, 0.156936, -0.54251, -0.0780433, 0.114446, -0.50002, -0.128043, 0.121956, -0.535, -0.128043, 0.121956, -0.50002, -0.128043, 0.121956, -0.54251, -0.0780433, 0.114446, -0.49251, -0.0780433, 0.114446, -0.50002, -0.128043, 0.156936, -0.49251, -0.0780433, 0.114446, -0.49251, -0.0780433, 0.164446, -0.49251, -0.0780433, 0.114446, -0.50002, -0.128043, 0.156936, -0.50002, -0.128043, 0.121956, -0.54251, -0.0780433, 0.114446, -0.535, -0.128043, 0.156936, -0.54251, -0.0780433, 0.164446, -0.535, -0.128043, 0.156936, -0.54251, -0.0780433, 0.114446, -0.535, -0.128043, 0.121956, -0.49251, -0.0780433, 0.164446, -0.535, -0.128043, 0.156936, -0.50002, -0.128043, 0.156936, -0.535, -0.128043, 0.156936, -0.49251, -0.0780433, 0.164446, -0.54251, -0.0780433, 0.164446),
		Vector3Array(0.988907, -0.148533, 0.0, 0.988907, -0.148533, 0.0, 0.988907, -0.148533, 0.0, 0.988907, -0.148533, 0.0, 0.988907, -0.148533, 0.0, 0.988907, -0.148533, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -0.148534, -0.988907, 0.0, -0.148534, -0.988907, 0.0, -0.148534, -0.988907, 0.0, -0.148534, -0.988907, 0.0, -0.148534, -0.988907, 0.0, -0.148534, -0.988907, 0.0, -0.148534, 0.988907, 0.0, -0.148534, 0.988907, 0.0, -0.148534, 0.988907, 0.0, -0.148534, 0.988907, 0.0, -0.148534, 0.988907, 0.0, -0.148534, 0.988907, -0.988907, -0.148533, 0.0, -0.988907, -0.148533, 0.0, -0.988907, -0.148533, 0.0, -0.988907, -0.148533, 0.0, -0.988907, -0.148533, 0.0, -0.988907, -0.148533, 0.0, -0.988907, -0.148533, 0.0, -0.988907, -0.148533, 0.0, -0.988907, -0.148533, 0.0, -0.988908, -0.148533, 0.0, -0.988908, -0.148533, 0.0, -0.988908, -0.148533, 0.0, 0.988907, -0.148533, 0.0, 0.988907, -0.148533, 0.0, 0.988907, -0.148533, 0.0, 0.988908, -0.148533, 0.0, 0.988908, -0.148533, 0.0, 0.988908, -0.148533, 0.0, 0.0, -0.148534, 0.988907, 0.0, -0.148534, 0.988907, 0.0, -0.148534, 0.988907, 0.0, -0.148534, 0.988907, 0.0, -0.148534, 0.988907, 0.0, -0.148534, 0.988907, 0.0, -0.148534, -0.988907, 0.0, -0.148534, -0.988907, 0.0, -0.148534, -0.988907, 0.0, -0.148534, -0.988907, 0.0, -0.148534, -0.988907, 0.0, -0.148534, -0.988907, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -0.148534, 0.988907, 0.0, -0.148534, 0.988907, 0.0, -0.148534, 0.988907, 0.0, -0.148534, 0.988907, 0.0, -0.148534, 0.988907, 0.0, -0.148534, 0.988907, 0.0, -0.148534, -0.988907, 0.0, -0.148534, -0.988907, 0.0, -0.148534, -0.988907, 0.0, -0.148534, -0.988907, 0.0, -0.148534, -0.988907, 0.0, -0.148534, -0.988907, -0.988907, -0.148534, 0.0, -0.988907, -0.148534, 0.0, -0.988907, -0.148534, 0.0, -0.988907, -0.148534, 0.0, -0.988907, -0.148534, 0.0, -0.988907, -0.148534, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.988907, -0.148534, 0.0, 0.988907, -0.148534, 0.0, 0.988907, -0.148534, 0.0, 0.988907, -0.148534, 0.0, 0.988907, -0.148534, 0.0, 0.988907, -0.148534, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -0.148534, -0.988907, 0.0, -0.148534, -0.988907, 0.0, -0.148534, -0.988907, 0.0, -0.148533, -0.988907, 0.0, -0.148533, -0.988907, 0.0, -0.148533, -0.988907, 0.988907, -0.148534, 0.0, 0.988907, -0.148534, 0.0, 0.988907, -0.148534, 0.0, 0.988907, -0.148534, 0.0, 0.988907, -0.148534, 0.0, 0.988907, -0.148534, 0.0, -0.988907, -0.148534, 0.0, -0.988907, -0.148534, 0.0, -0.988907, -0.148534, 0.0, -0.988907, -0.148534, 0.0, -0.988907, -0.148534, 0.0, -0.988907, -0.148534, 0.0, 0.0, -0.148534, 0.988907, 0.0, -0.148534, 0.988907, 0.0, -0.148534, 0.988907, 0.0, -0.148535, 0.988907, 0.0, -0.148535, 0.988907, 0.0, -0.148535, 0.988907),
		FloatArray(0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(13.7803, -5.40333, 15.4531, -7.39392, 13.4846, -7.39392, 15.4531, -7.39392, 13.7803, -5.40333, 15.1575, -5.40333, -43.1102, -14.1575, -41.7331, -12.7803, -41.7331, -14.1575, -43.1102, -12.7803, -41.4374, -3.24198, -43.1102, -1.2514, -41.7331, -1.2514, -43.1102, -1.2514, -41.4374, -3.24198, -43.4059, -3.24198, 43.4059, 1.05626, 41.7331, 3.04684, 43.1102, 3.04684, 41.7331, 3.04684, 43.4059, 1.05626, 41.4374, 1.05626, -15.4531, 5.20819, -13.7803, 7.19877, -13.4846, 5.20819, -13.7803, 7.19877, -15.4531, 5.20819, -15.1575, 7.19877, -3.44449, 5.20819, -1.77165, 7.19877, -1.47598, 5.20819, -1.77165, 7.19877, -3.44449, 5.20819, -3.14882, 7.19877, 1.77165, -5.40333, 3.44449, -7.39392, 1.47598, -7.39392, 3.44449, -7.39392, 1.77165, -5.40333, 3.14882, -5.40333, 43.4059, -0.727434, 41.7331, 1.26315, 43.1102, 1.26315, 41.7331, 1.26315, 43.4059, -0.727434, 41.4374, -0.727434, -41.4374, -1.45829, -43.1102, 0.532294, -41.7331, 0.532294, -43.1102, 0.532294, -41.4374, -1.45829, -43.4059, -1.45829, -43.1102, -2.14882, -41.7331, -0.771654, -41.7331, -2.14882, -43.1102, -0.771654, 2.65709, 1.05626, 0.984252, 3.04684, 2.36142, 3.04684, 0.984252, 3.04684, 2.65709, 1.05626, 0.688583, 1.05626, -0.688583, -3.24198, -2.36142, -1.2514, -0.984252, -1.2514, -2.36142, -1.2514, -0.688583, -3.24198, -2.65709, -3.24198, -15.4531, -0.84439, -13.7803, 1.14619, -13.4846, -0.84439, -13.7803, 1.14619, -15.4531, -0.84439, -15.1575, 1.14619, -2.36142, -14.1575, -0.984252, -12.7803, -0.984252, -14.1575, -2.36142, -12.7803, 13.7803, 0.64925, 15.4531, -1.34134, 13.4846, -1.34134, 15.4531, -1.34134, 13.7803, 0.64925, 15.1575, 0.64925, -2.36142, -2.14882, -0.984252, -0.771654, -0.984252, -2.14882, -2.36142, -0.771654, -0.688583, -1.45829, -2.36142, 0.532294, -0.984252, 0.532294, -2.36142, 0.532294, -0.688583, -1.45829, -2.65709, -1.45829, 1.77165, 0.64925, 3.44449, -1.34134, 1.47598, -1.34134, 3.44449, -1.34134, 1.77165, 0.64925, 3.14882, 0.64925, -3.44449, -0.84439, -1.77165, 1.14619, -1.47598, -0.84439, -1.77165, 1.14619, -3.44449, -0.84439, -3.14882, 1.14619, 2.65709, -0.727434, 0.984252, 1.26315, 2.36142, 1.26315, 0.984252, 1.26315, 2.65709, -0.727434, 0.688583, -0.727434),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 7, 9, 6, 10, 12, 11, 13, 15, 14, 16, 18, 17, 19, 21, 20, 22, 24, 23, 25, 27, 26, 28, 30, 29, 31, 33, 32, 34, 36, 35, 37, 39, 38, 40, 42, 41, 43, 45, 44, 46, 48, 47, 49, 51, 50, 52, 54, 53, 53, 55, 52, 56, 58, 57, 59, 61, 60, 62, 64, 63, 65, 67, 66, 68, 70, 69, 71, 73, 72, 74, 76, 75, 75, 77, 74, 78, 80, 79, 81, 83, 82, 84, 86, 85, 85, 87, 84, 88, 90, 89, 91, 93, 92, 94, 96, 95, 97, 99, 98, 100, 102, 101, 103, 105, 104, 106, 108, 107, 109, 111, 110)
	],
	"morph_arrays":[]
}

[node type="Spatial" name="Scene"]

[node name="loungeDesignSofa(Clone)" type="MeshInstance" parent="."]

mesh = SubResource(5)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.56, 0.128043, -0.201936)
