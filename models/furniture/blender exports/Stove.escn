[gd_scene load_steps=1 format=2]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.7406105399131775, 0.8228667378425598,
		0.8396226167678833, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(1.0);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)

[sub_resource id=3 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.8962264060974121, 0.6015712022781372,
		0.39315590262413025, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(1.0);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=4 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(3)

[sub_resource id=5 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.30588236451148987, 0.38823530077934265,
		0.38823530077934265, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(1.0);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=6 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(5)

[sub_resource id=7 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.9725490212440491, 1.0, 1.0, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(1.0);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=8 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(7)

[sub_resource id=9 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.6980392336845398, 0.8274509906768799,
		0.7686274647712708, 0.5);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(1.0);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(0.5);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=10 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(9)

[sub_resource id=11 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.3686274588108063, 0.46666666865348816,
		0.46666666865348816, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(1.0);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=12 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(11)

[sub_resource id=13 type="ArrayMesh"]

resource_name = "Mesh kitchenStoveElectric"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(0.215307, 0.125141, -0.250593, -0.214693, 0.125141, -0.280593, -0.214693, 0.125141, -0.250593, 0.215307, 0.125141, -0.280593, -0.214693, 0.125141, -0.280593, 0.215307, 0.0651413, -0.280593, -0.214693, 0.0651413, -0.280593, 0.215307, 0.125141, -0.280593, -0.214693, 0.125141, -0.280593, -0.214693, 0.0951413, -0.250593, -0.214693, 0.125141, -0.250593, -0.214693, 0.0651413, -0.280593, -0.214693, 0.0651413, 0.149407, -0.214693, 0.0651413, 0.169407, -0.214693, 0.0951413, 0.169407, 0.215307, 0.0651413, 0.149407, 0.215307, 0.0951413, 0.169407, 0.215307, 0.0651413, 0.169407, 0.215307, 0.0951413, -0.250593, 0.215307, 0.0651413, -0.280593, 0.215307, 0.125141, -0.250593, 0.215307, 0.125141, -0.280593, 0.215307, 0.125141, -0.250593, -0.214693, 0.0951413, -0.250593, 0.215307, 0.0951413, -0.250593, -0.214693, 0.125141, -0.250593, -0.214693, 0.0951413, 0.169407, -0.184466, 0.0951413, 0.119407, -0.214693, 0.0951413, -0.250593, -0.184466, 0.0951413, 0.119407, -0.214693, 0.0951413, 0.169407, 0.215307, 0.0951413, 0.169407, 0.185079, 0.0951413, 0.119407, 0.185079, 0.0951413, -0.238494, -0.184466, 0.0951413, -0.238494, -0.214693, 0.0951413, -0.250593, -0.184466, 0.0951413, 0.119407, -0.214693, 0.0951413, -0.250593, -0.184466, 0.0951413, -0.238494, 0.215307, 0.0951413, -0.250593, 0.215307, 0.0951413, 0.169407, -0.214693, 0.0651413, 0.169407, 0.215307, 0.0651413, 0.169407, -0.214693, 0.0651413, 0.169407, 0.215307, 0.0951413, 0.169407, -0.214693, 0.0951413, 0.169407, 0.215307, 0.0651413, 0.149407, -0.214693, 0.0651413, 0.169407, -0.214693, 0.0651413, 0.149407, 0.215307, 0.0651413, 0.169407, 0.188462, -0.239773, 0.149407, 0.14312, -0.197498, 0.149407, -0.187849, -0.239773, 0.149407, 0.14312, -0.197498, 0.149407, 0.188462, -0.239773, 0.149407, 0.188462, 0.0382971, 0.149407, 0.14312, -0.0363609, 0.149407, 0.14312, -0.0117029, 0.149407, -0.14688, -0.0363609, 0.149407, 0.14312, 0.00829712, 0.149407, -0.14688, 0.00829712, 0.149407, -0.14688, -0.197498, 0.149407, -0.187849, -0.239773, 0.149407, 0.14312, -0.197498, 0.149407, -0.187849, -0.239773, 0.149407, -0.14688, -0.197498, 0.149407, -0.187849, 0.0382971, 0.149407, -0.14688, -0.0117029, 0.149407, 0.14312, -0.0117029, 0.149407, -0.14688, -0.0117029, 0.169407, -0.14688, -0.0117029, 0.149407, 0.14312, -0.0117029, 0.169407, -0.187849, -0.239773, 0.129407, -0.187849, 0.0382971, 0.149407, -0.187849, -0.239773, 0.149407, -0.187849, 0.0382971, 0.129407, 0.14312, -0.197498, 0.149407, -0.14688, -0.197498, 0.129407, -0.14688, -0.197498, 0.149407, 0.14312, -0.197498, 0.129407, -0.187849, -0.239773, 0.129407, -0.14688, -0.197498, 0.129407, 0.188462, -0.239773, 0.129407, -0.14688, -0.197498, 0.129407, -0.187849, -0.239773, 0.129407, -0.187849, 0.0382971, 0.129407, -0.14688, -0.197498, 0.129407, -0.187849, 0.0382971, 0.129407, -0.14688, -0.0363609, 0.129407, -0.14688, -0.0363609, 0.129407, -0.187849, 0.0382971, 0.129407, 0.14312, -0.0363609, 0.129407, 0.14312, -0.197498, 0.129407, 0.188462, -0.239773, 0.129407, -0.14688, -0.197498, 0.129407, 0.188462, 0.0382971, 0.129407, 0.188462, 0.0382971, 0.129407, 0.14312, -0.0363609, 0.129407, -0.187849, 0.0382971, 0.129407, 0.188462, -0.239773, 0.149407, -0.187849, -0.239773, 0.129407, -0.187849, -0.239773, 0.149407, 0.188462, -0.239773, 0.129407, 0.188462, 0.0382971, 0.129407, -0.187849, 0.0382971, 0.149407, -0.187849, 0.0382971, 0.129407, 0.188462, 0.0382971, 0.149407, 0.14312, -0.0117029, 0.149407, 0.14312, -0.0017029, 0.169407, 0.14312, -0.0117029, 0.169407, 0.14312, 0.00829712, 0.159407, 0.14312, 0.00829712, 0.149407, -0.14688, 0.00829712, 0.159407, -0.14688, -0.0117029, 0.169407, -0.14688, -0.0017029, 0.169407, -0.14688, -0.0117029, 0.169407, -0.14688, 0.00829712, 0.159407, -0.14688, -0.0117029, 0.149407, -0.14688, 0.00829712, 0.149407, 0.14312, 0.00829712, 0.159407, -0.14688, -0.0017029, 0.169407, 0.14312, -0.0017029, 0.169407, -0.14688, -0.0017029, 0.169407, 0.14312, 0.00829712, 0.159407, -0.14688, 0.00829712, 0.159407, 0.188462, 0.0382971, 0.129407, 0.188462, -0.239773, 0.149407, 0.188462, 0.0382971, 0.149407, 0.188462, -0.239773, 0.129407, -0.14688, -0.197498, 0.129407, -0.14688, -0.0363609, 0.149407, -0.14688, -0.197498, 0.149407, -0.14688, -0.0363609, 0.129407, 0.14312, -0.0363609, 0.129407, 0.14312, -0.197498, 0.149407, 0.14312, -0.0363609, 0.149407, 0.14312, -0.197498, 0.129407, 0.14312, -0.0363609, 0.129407, -0.14688, -0.0363609, 0.149407, -0.14688, -0.0363609, 0.129407, 0.14312, -0.0363609, 0.149407, 0.14312, 0.00829712, 0.159407, -0.14688, 0.00829712, 0.149407, -0.14688, 0.00829712, 0.159407, 0.14312, 0.00829712, 0.149407, 0.14312, -0.0017029, 0.169407, -0.14688, -0.0117029, 0.169407, 0.14312, -0.0117029, 0.169407, -0.14688, -0.0117029, 0.169407, 0.14312, -0.0017029, 0.169407, -0.14688, -0.0017029, 0.169407),
		Vector3Array(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -5.86866e-07, 1.0, 0.0, -5.86866e-07, 1.0, 0.0, -5.86866e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 6.88693e-07, 1.0, 0.0, 6.88693e-07, 1.0, 0.0, 6.88693e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 4.68344e-07, 1.0, 0.0, 4.68344e-07, 1.0, 0.0, 4.68344e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -6.07736e-07, 1.0, 0.0, -6.07736e-07, 1.0, 0.0, -6.07736e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 4.68344e-07, -1.0, 0.0, 4.68344e-07, -1.0, 0.0, 4.68344e-07, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -2.65195e-07, -1.0, 0.0, -2.65195e-07, -1.0, 0.0, -2.65195e-07, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, -2.32831e-06, -1.0, 0.0, -2.32831e-06, -1.0, 0.0, -2.32831e-06, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.707106, 0.707108, 0.0, 0.707106, 0.707108, 0.0, 0.707106, 0.707108, 0.0, 0.707107, 0.707106, 0.0, 0.707107, 0.707106, 0.0, 0.707107, 0.707106, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0),
		FloatArray(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, -5.2568e-08, 1.0, 1.0, 0.0, -3.5045e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -2.14346e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 5.25679e-08, -1.0, 1.0, 0.0, 1.50271e-08, -1.0, 1.0, 0.0, 3.10327e-08, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 5.86866e-07, 0.0, 1.0, 1.0, 5.86866e-07, 0.0, 1.0, 1.0, 5.86866e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -1.40394e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -1.18784e-07, 1.0, 1.0, -6.88693e-07, 2.79885e-07, 1.0, 1.0, -6.88693e-07, 2.79885e-07, 1.0, 1.0, -6.88693e-07, 2.79885e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -2.25865e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.31456e-07, 0.0, 1.0, 1.0, 4.71396e-07, 0.0, 1.0, 1.0, 5.52672e-08, 0.0, 1.0, 1.0, -9.10556e-08, 0.0, 1.0, 1.0, 6.69939e-07, 0.0, 1.0, 1.0, 9.73086e-08, 0.0, 1.0, 1.0, 1.90894e-07, 0.0, 1.0, 1.0, -2.15925e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -1.99337e-07, 0.0, 1.0, 1.0, -1.51613e-07, 0.0, 1.0, 1.0, -1.75789e-07, 0.0, 1.0, 1.0, -8.48066e-07, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, -4.95196e-08, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, -5.29447e-08, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 1.99337e-07, 0.0, 1.0, -1.0, 1.99337e-07, 0.0, 1.0, -1.0, 1.99337e-07, 0.0, 1.0, -1.0, -4.58654e-07, 0.0, 1.0, -1.0, -4.58654e-07, 0.0, 1.0, -1.0, -4.58654e-07, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 2.45136e-07, 0.0, 1.0, -1.0, -4.85639e-08, 0.0, 1.0, -1.0, -1.02232e-07, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 2.07483e-07, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 8.07574e-08, -1.0, 1.0, 0.0, 1.04501e-07, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 1.04501e-07, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -2.32831e-06, -4.73112e-07, 1.0, 1.0, -2.32831e-06, -4.73112e-07, 1.0, 1.0, -2.32831e-06, -4.73112e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(16.9291, -15.5354, 0.0, -16.7165, 0.0, -15.5354, 16.9291, -16.7165, 0.0, -16.7165, -16.9291, -14.3543, 0.0, -14.3543, -16.9291, -16.7165, -17.7165, -16.7165, -16.5354, -15.5354, -16.5354, -16.7165, -17.7165, -14.3543, -0.787402, -14.3543, 0.0, -14.3543, 0.0, -15.5354, 0.787402, -14.3543, 0.0, -15.5354, 0.0, -14.3543, 16.5354, -15.5354, 17.7165, -14.3543, 16.5354, -16.7165, 17.7165, -16.7165, 16.9291, -16.7165, 0.0, -15.5354, 16.9291, -15.5354, 0.0, -16.7165, 0.0, 1.0, 1.19006, -0.968504, 0.0, -15.5354, 1.19006, -0.968504, 0.0, 1.0, 16.9291, 1.0, 15.7391, -0.968504, 15.7391, -15.0591, 1.19006, -15.0591, 0.0, -15.5354, 1.19006, -0.968504, 0.0, -15.5354, 1.19006, -15.0591, 16.9291, -15.5354, 16.9291, -15.5354, 0.0, -14.3543, 16.9291, -14.3543, 0.0, -14.3543, 16.9291, -15.5354, 0.0, -15.5354, -16.9291, 0.212598, 0.0, 1.0, 0.0, 0.212598, -16.9291, 1.0, 15.8723, -2.34984, 14.0872, -4.01419, 1.05686, -2.34984, 14.0872, -4.01419, 15.8723, -2.34984, 15.8723, -13.2975, 14.0872, -10.3582, 14.0872, -11.329, 2.66984, -10.3582, 14.0872, -12.1164, 2.66984, -12.1164, 2.66984, -4.01419, 1.05686, -2.34984, 14.0872, -4.01419, 1.05686, -2.34984, 2.66984, -4.01419, 1.05686, -13.2975, 2.66984, -11.329, -14.0872, 0.212598, -2.66984, 1.0, -2.66984, 0.212598, -14.0872, 1.0, 1.5748, -2.34984, 0.787402, -13.2975, 0.787402, -2.34984, 1.5748, -13.2975, 14.0872, 0.212598, 2.66984, -0.574803, 2.66984, 0.212598, 14.0872, -0.574803, -1.05686, -2.34984, -2.66984, -4.01419, -15.8723, -2.34984, -2.66984, -4.01419, -1.05686, -2.34984, -1.05686, -13.2975, -2.66984, -4.01419, -1.05686, -13.2975, -2.66984, -10.3582, -2.66984, -10.3582, -1.05686, -13.2975, -14.0872, -10.3582, -14.0872, -4.01419, -15.8723, -2.34984, -2.66984, -4.01419, -15.8723, -13.2975, -15.8723, -13.2975, -14.0872, -10.3582, -1.05686, -13.2975, 15.8723, 0.212598, 1.05686, -0.574803, 1.05686, 0.212598, 15.8723, -0.574803, -15.8723, -0.574803, -1.05686, 0.212598, -1.05686, -0.574803, -15.8723, 0.212598, 0.787402, -11.329, 0.0, -11.7227, 0.0, -11.329, 0.393701, -12.1164, 0.787402, -12.1164, -0.393701, -12.1164, 0.0, -11.329, 0.0, -11.7227, 0.0, -11.329, -0.393701, -12.1164, -0.787402, -11.329, -0.787402, -12.1164, 14.0872, -8.55306, 2.66984, -7.99629, 14.0872, -7.99629, 2.66984, -7.99629, 14.0872, -8.55306, 2.66984, -8.55306, -1.5748, -13.2975, -0.787402, -2.34984, -0.787402, -13.2975, -1.5748, -2.34984, 1.5748, -4.01419, 0.787402, -10.3582, 0.787402, -4.01419, 1.5748, -10.3582, -1.5748, -10.3582, -0.787402, -4.01419, -0.787402, -10.3582, -1.5748, -4.01419, -14.0872, -0.574803, -2.66984, 0.212598, -2.66984, -0.574803, -14.0872, 0.212598, 14.0872, 0.606299, 2.66984, 0.212598, 2.66984, 0.606299, 14.0872, 0.212598, 14.0872, -11.7227, 2.66984, -11.329, 14.0872, -11.329, 2.66984, -11.329, 14.0872, -11.7227, 2.66984, -11.7227),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 1, 3, 0, 4, 6, 5, 5, 7, 4, 8, 10, 9, 11, 8, 9, 12, 11, 9, 13, 12, 9, 9, 14, 13, 15, 17, 16, 16, 18, 15, 18, 19, 15, 18, 20, 19, 20, 21, 19, 22, 24, 23, 23, 25, 22, 26, 28, 27, 29, 31, 30, 29, 32, 31, 32, 33, 31, 34, 36, 35, 37, 39, 38, 39, 33, 38, 39, 31, 33, 40, 42, 41, 43, 45, 44, 46, 48, 47, 47, 49, 46, 50, 52, 51, 53, 55, 54, 53, 56, 55, 56, 57, 55, 56, 58, 57, 57, 59, 55, 59, 60, 55, 61, 63, 62, 64, 66, 65, 66, 58, 65, 66, 55, 60, 66, 67, 58, 67, 57, 58, 66, 60, 67, 68, 70, 69, 69, 71, 68, 72, 74, 73, 73, 75, 72, 76, 78, 77, 77, 79, 76, 80, 82, 81, 83, 85, 84, 86, 88, 87, 89, 91, 90, 92, 94, 93, 93, 95, 92, 95, 91, 92, 96, 98, 97, 99, 101, 100, 100, 102, 99, 103, 105, 104, 104, 106, 103, 107, 109, 108, 108, 110, 107, 110, 111, 107, 112, 114, 113, 115, 117, 116, 117, 118, 116, 119, 121, 120, 122, 124, 123, 125, 127, 126, 126, 128, 125, 129, 131, 130, 130, 132, 129, 133, 135, 134, 134, 136, 133, 137, 139, 138, 138, 140, 137, 141, 143, 142, 142, 144, 141, 145, 147, 146, 148, 150, 149)
	],
	"morph_arrays":[]
}
surfaces/1 = {
	"material":SubResource(4),
	"primitive":4,
	"arrays":[
		Vector3Array(0.215307, -0.324859, -0.280593, -0.214693, -0.324859, 0.129407, -0.214693, -0.324859, -0.280593, 0.215307, -0.324859, 0.129407, 0.215307, -0.266617, 0.129407, -0.214693, -0.266617, 0.149407, -0.214693, -0.266617, 0.129407, 0.215307, -0.266617, 0.149407, 0.215307, -0.266617, 0.129407, -0.214693, -0.324859, 0.129407, 0.215307, -0.324859, 0.129407, -0.214693, -0.324859, 0.129407, 0.215307, -0.266617, 0.129407, -0.214693, -0.266617, 0.129407, 0.215307, -0.324859, -0.280593, 0.215307, -0.266617, 0.129407, 0.215307, -0.324859, 0.129407, 0.215307, 0.0651413, -0.280593, 0.215307, -0.266617, 0.129407, 0.215307, -0.324859, -0.280593, 0.215307, 0.0651413, 0.149407, 0.215307, 0.0651413, -0.280593, 0.215307, -0.266617, 0.149407, -0.214693, 0.0651413, -0.280593, -0.214693, -0.266617, 0.149407, -0.214693, 0.0651413, 0.149407, -0.214693, -0.266617, 0.129407, -0.214693, -0.324859, 0.129407, -0.214693, -0.324859, -0.280593, 0.215307, 0.0651413, 0.149407, -0.214693, 0.0651413, -0.280593, -0.214693, 0.0651413, 0.149407, 0.215307, 0.0651413, -0.280593, -0.214693, 0.0651413, -0.280593, 0.215307, -0.324859, -0.280593, -0.214693, -0.324859, -0.280593, 0.215307, 0.0651413, -0.280593, 0.215307, -0.266617, 0.149407, 0.188462, -0.239773, 0.149407, -0.214693, -0.266617, 0.149407, 0.188462, -0.239773, 0.149407, 0.215307, -0.266617, 0.149407, 0.215307, 0.0651413, 0.149407, 0.188462, 0.0382971, 0.149407, 0.188462, 0.0382971, 0.149407, 0.215307, 0.0651413, 0.149407, -0.187849, 0.0382971, 0.149407, -0.187849, -0.239773, 0.149407, -0.214693, -0.266617, 0.149407, 0.188462, -0.239773, 0.149407, -0.214693, -0.266617, 0.149407, -0.187849, -0.239773, 0.149407, -0.214693, 0.0651413, 0.149407, -0.214693, 0.0651413, 0.149407, -0.187849, -0.239773, 0.149407, -0.187849, 0.0382971, 0.149407, -0.214693, 0.0651413, 0.149407, -0.187849, 0.0382971, 0.149407, 0.215307, 0.0651413, 0.149407),
		Vector3Array(0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.16488e-08, 1.0, 0.0, 1.16488e-08, 1.0, 0.0, 1.16488e-08, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 7.37552e-07, 1.0, 0.0, 7.37552e-07, 1.0, 0.0, 7.37552e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -6.45463e-07, 1.0, 0.0, -6.45463e-07, 1.0, 0.0, -6.45463e-07, 1.0),
		FloatArray(-1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.16488e-08, 0.0, -1.0, 1.0, 1.16488e-08, 0.0, -1.0, 1.0, 1.16488e-08, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 1.50271e-08, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, -2.14346e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 9.08594e-08, 1.0, 1.0, 0.0, 9.81277e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 4.71396e-07, 0.0, 1.0, 1.0, 5.9499e-07, 0.0, 1.0, 1.0, 6.65231e-08, 0.0, 1.0, 1.0, 5.52672e-08, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -5.9499e-07, 0.0, 1.0, 1.0, -5.9499e-07, 0.0, 1.0, 1.0, -5.9499e-07, 0.0, 1.0, 1.0, -3.04229e-07, 0.0, 1.0, 1.0, -3.04229e-07, 0.0, 1.0, 1.0, -3.04229e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(-16.9291, -16.7165, 0.0, -0.574803, 0.0, -16.7165, -16.9291, -0.574803, -16.9291, -0.574803, 0.0, 0.212598, 0.0, -0.574803, -16.9291, 0.212598, 16.9291, -1.29299, 0.0, 1.0, 16.9291, 1.0, 0.0, 1.0, 16.9291, -1.29299, 0.0, -1.29299, 17.7165, 1.0, 1.5748, -1.29299, 1.5748, 1.0, 17.7165, -14.3543, 1.5748, -1.29299, 17.7165, 1.0, 0.787402, -14.3543, 17.7165, -14.3543, 0.787402, -1.29299, -17.7165, -14.3543, -0.787402, -1.29299, -0.787402, -14.3543, -1.5748, -1.29299, -1.5748, 1.0, -17.7165, 1.0, 16.9291, 0.212598, 0.0, -16.7165, 0.0, 0.212598, 16.9291, -16.7165, 0.0, -14.3543, -16.9291, 1.0, 0.0, 1.0, -16.9291, -14.3543, 16.9291, -1.29299, 15.8723, -2.34984, 0.0, -1.29299, 15.8723, -2.34984, 16.9291, -1.29299, 16.9291, -14.3543, 15.8723, -13.2975, 15.8723, -13.2975, 16.9291, -14.3543, 1.05686, -13.2975, 1.05686, -2.34984, 0.0, -1.29299, 15.8723, -2.34984, 0.0, -1.29299, 1.05686, -2.34984, 0.0, -14.3543, 0.0, -14.3543, 1.05686, -2.34984, 1.05686, -13.2975, 0.0, -14.3543, 1.05686, -13.2975, 16.9291, -14.3543),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 1, 3, 0, 4, 6, 5, 5, 7, 4, 8, 10, 9, 11, 13, 12, 14, 16, 15, 17, 19, 18, 20, 21, 15, 15, 22, 20, 23, 25, 24, 24, 26, 23, 26, 27, 23, 27, 28, 23, 29, 31, 30, 30, 32, 29, 33, 35, 34, 34, 36, 33, 37, 39, 38, 40, 42, 41, 40, 43, 42, 44, 46, 45, 47, 49, 48, 50, 52, 51, 53, 55, 54, 56, 58, 57)
	],
	"morph_arrays":[]
}
surfaces/2 = {
	"material":SubResource(6),
	"primitive":4,
	"arrays":[
		Vector3Array(0.188462, -0.239773, 0.129407, -0.187849, -0.239773, -0.230593, -0.187849, -0.239773, 0.129407, 0.188462, -0.239773, -0.230593, 0.188462, 0.0382971, -0.230593, -0.187849, 0.0382971, 0.129407, -0.187849, 0.0382971, -0.230593, 0.188462, 0.0382971, 0.129407, 0.188462, -0.239773, -0.230593, 0.154801, -0.120738, -0.230593, -0.187849, -0.239773, -0.230593, 0.154801, -0.120738, -0.230593, 0.188462, -0.239773, -0.230593, 0.188462, -0.100738, -0.230593, 0.154801, -0.120738, -0.230593, 0.188462, -0.100738, -0.230593, 0.154801, -0.100738, -0.230593, -0.154188, -0.120738, -0.230593, -0.187849, -0.100738, -0.230593, -0.154188, -0.100738, -0.230593, 0.174079, 0.100141, 0.108407, 0.174079, 0.100141, -0.226427, 0.174079, 0.100141, 0.0578395, 0.174079, 0.100141, -0.226427, 0.174079, 0.100141, 0.108407, 0.185079, 0.0951413, 0.119407, 0.174079, 0.100141, -0.226427, 0.185079, 0.0951413, 0.119407, 0.185079, 0.0951413, -0.238494, -0.173466, 0.100141, -0.226427, 0.185079, 0.0951413, -0.238494, -0.184466, 0.0951413, -0.238494, 0.185079, 0.0951413, -0.238494, -0.173466, 0.100141, -0.226427, 0.174079, 0.100141, -0.226427, -0.173466, 0.100141, 0.108407, -0.184466, 0.0951413, -0.238494, -0.184466, 0.0951413, 0.119407, -0.184466, 0.0951413, -0.238494, -0.173466, 0.100141, 0.108407, -0.173466, 0.100141, -0.226427, -0.173466, 0.100141, -0.226427, -0.173466, 0.100141, 0.108407, -0.173466, 0.100141, 0.0578395, 0.185079, 0.0951413, 0.119407, -0.173466, 0.100141, 0.108407, -0.184466, 0.0951413, 0.119407, -0.173466, 0.100141, 0.108407, 0.185079, 0.0951413, 0.119407, 0.174079, 0.100141, 0.108407, 0.188462, -0.100738, -0.230593, 0.154801, -0.100738, 0.109407, 0.154801, -0.100738, -0.230593, 0.188462, -0.100738, 0.109407, 0.188462, 0.0382971, -0.230593, 0.139379, -0.0853157, -0.230593, 0.188462, -0.0853157, -0.230593, -0.138766, -0.0853157, -0.230593, -0.138766, -0.0853157, -0.230593, 0.188462, 0.0382971, -0.230593, -0.187849, -0.0853157, -0.230593, -0.187849, -0.0853157, -0.230593, -0.187849, 0.0382971, -0.230593, -0.138766, -0.105316, -0.230593, 0.139379, -0.105316, -0.230593, 0.188462, -0.0853157, 0.109407, 0.139379, -0.0853157, -0.230593, 0.139379, -0.0853157, 0.109407, 0.188462, -0.0853157, -0.230593, 0.139379, -0.0853157, -0.230593, 0.139379, -0.105316, 0.109407, 0.139379, -0.0853157, 0.109407, 0.139379, -0.105316, -0.230593, 0.139379, -0.105316, 0.109407, -0.138766, -0.105316, -0.230593, -0.138766, -0.105316, 0.109407, 0.139379, -0.105316, -0.230593, -0.138766, -0.105316, -0.230593, -0.138766, -0.0853157, 0.109407, -0.138766, -0.105316, 0.109407, -0.138766, -0.0853157, -0.230593, -0.138766, -0.0853157, 0.109407, -0.187849, -0.0853157, -0.230593, -0.187849, -0.0853157, 0.109407, -0.138766, -0.0853157, -0.230593, -0.154188, -0.100738, -0.230593, -0.187849, -0.100738, 0.109407, -0.187849, -0.100738, -0.230593, -0.154188, -0.100738, 0.109407, -0.154188, -0.100738, -0.230593, -0.154188, -0.120738, 0.109407, -0.154188, -0.100738, 0.109407, -0.154188, -0.120738, -0.230593, 0.154801, -0.120738, -0.230593, -0.154188, -0.120738, 0.109407, -0.154188, -0.120738, -0.230593, 0.154801, -0.120738, 0.109407, 0.154801, -0.120738, -0.230593, 0.154801, -0.100738, 0.109407, 0.154801, -0.120738, 0.109407, 0.154801, -0.100738, -0.230593, 0.188462, -0.0853157, 0.109407, 0.154801, -0.100738, 0.109407, 0.188462, -0.100738, 0.109407, 0.139379, -0.0853157, 0.109407, 0.154801, -0.100738, 0.109407, 0.188462, -0.0853157, 0.109407, 0.139379, -0.105316, 0.109407, 0.154801, -0.100738, 0.109407, 0.139379, -0.0853157, 0.109407, 0.154801, -0.120738, 0.109407, -0.154188, -0.120738, 0.109407, -0.138766, -0.105316, 0.109407, -0.154188, -0.120738, 0.109407, 0.139379, -0.105316, 0.109407, -0.154188, -0.120738, 0.109407, -0.138766, -0.105316, 0.109407, -0.154188, -0.100738, 0.109407, -0.138766, -0.0853157, 0.109407, -0.187849, -0.100738, 0.109407, -0.187849, -0.0853157, 0.109407, 0.188462, 0.0382971, 0.129407, 0.188462, -0.0853157, 0.109407, 0.188462, -0.239773, 0.129407, 0.188462, -0.0853157, 0.109407, 0.188462, 0.0382971, 0.129407, 0.188462, 0.0382971, -0.230593, 0.188462, -0.0853157, -0.230593, 0.188462, -0.100738, 0.109407, 0.188462, -0.239773, 0.129407, 0.188462, -0.0853157, 0.109407, 0.188462, -0.239773, 0.129407, 0.188462, -0.100738, 0.109407, 0.188462, -0.239773, -0.230593, 0.188462, -0.239773, -0.230593, 0.188462, -0.100738, 0.109407, 0.188462, -0.100738, -0.230593, -0.187849, -0.239773, 0.129407, -0.187849, -0.100738, 0.109407, -0.187849, 0.0382971, 0.129407, -0.187849, -0.239773, -0.230593, -0.187849, -0.100738, -0.230593, -0.187849, -0.0853157, 0.109407, -0.187849, 0.0382971, -0.230593, -0.187849, -0.0853157, -0.230593, 0.0553065, 0.100141, 0.0955644, 0.0553065, 0.100141, 0.0717487, 0.0484315, 0.100141, 0.0836565, 0.0553065, 0.100141, 0.0717487, 0.0553065, 0.100141, 0.0955644, 0.0690565, 0.100141, 0.0955644, 0.0690565, 0.100141, 0.0717487, 0.0690565, 0.100141, 0.0717487, 0.0690565, 0.100141, 0.0955644, 0.0759315, 0.100141, 0.0836565, 0.124057, 0.100141, 0.0955644, 0.124057, 0.100141, 0.0717487, 0.117182, 0.100141, 0.0836565, 0.124057, 0.100141, 0.0717487, 0.124057, 0.100141, 0.0955644, 0.137807, 0.100141, 0.0955644, 0.137807, 0.100141, 0.0717487, 0.137807, 0.100141, 0.0717487, 0.137807, 0.100141, 0.0955644, 0.144682, 0.100141, 0.0836565, -0.00519349, 0.100141, 0.0931828, -0.00519349, 0.100141, 0.0741303, -0.0106935, 0.100141, 0.0836565, 0.00580652, 0.100141, 0.0741303, 0.00580652, 0.100141, 0.0931828, 0.0113065, 0.100141, 0.0836565, -0.0684435, 0.100141, 0.0955644, -0.0684435, 0.100141, 0.0717487, -0.0753185, 0.100141, 0.0836565, -0.0684435, 0.100141, 0.0717487, -0.0684435, 0.100141, 0.0955644, -0.0546935, 0.100141, 0.0955644, -0.0684435, 0.100141, 0.0717487, -0.0546935, 0.100141, 0.0955644, -0.0546935, 0.100141, 0.0717487, -0.0546935, 0.100141, 0.0717487, -0.0546935, 0.100141, 0.0955644, -0.0478185, 0.100141, 0.0836565, -0.137193, 0.100141, 0.0955644, -0.137193, 0.100141, 0.0717487, -0.144068, 0.100141, 0.0836565, -0.137193, 0.100141, 0.0717487, -0.137193, 0.100141, 0.0955644, -0.123443, 0.100141, 0.0955644, -0.137193, 0.100141, 0.0717487, -0.123443, 0.100141, 0.0955644, -0.123443, 0.100141, 0.0717487, -0.123443, 0.100141, 0.0717487, -0.123443, 0.100141, 0.0955644, -0.116568, 0.100141, 0.0836565, -0.173466, 0.100141, 0.0578395, -0.138213, 0.100141, -0.0157472, -0.173466, 0.100141, -0.226427, -0.138213, 0.100141, -0.0157472, -0.173466, 0.100141, 0.0578395, -0.108953, 0.100141, 0.0349326, -0.108953, 0.100141, 0.0349326, -0.173466, 0.100141, 0.0578395, 0.174079, 0.100141, 0.0578395, -0.0504335, 0.100141, 0.0349326, 0.0510465, 0.100141, 0.0349326, -0.0211735, 0.100141, -0.0157472, 0.0217865, 0.100141, -0.0157472, -0.0211735, 0.100141, -0.145747, 0.109567, 0.100141, 0.0349326, 0.109567, 0.100141, 0.0349326, 0.174079, 0.100141, 0.0578395, 0.138826, 0.100141, -0.0157472, 0.138826, 0.100141, -0.0157472, 0.174079, 0.100141, 0.0578395, 0.138826, 0.100141, -0.145747, -0.138213, 0.100141, -0.145747, -0.173466, 0.100141, -0.226427, -0.138213, 0.100141, -0.0157472, -0.108953, 0.100141, -0.196427, -0.173466, 0.100141, -0.226427, -0.138213, 0.100141, -0.145747, 0.174079, 0.100141, -0.226427, 0.174079, 0.100141, -0.226427, 0.138826, 0.100141, -0.145747, 0.174079, 0.100141, 0.0578395, -0.0504335, 0.100141, -0.196427, 0.0510465, 0.100141, -0.196427, 0.0510465, 0.100141, -0.196427, -0.0211735, 0.100141, -0.145747, 0.0217865, 0.100141, -0.145747, 0.0217865, 0.100141, -0.145747, 0.109567, 0.100141, -0.196427, 0.174079, 0.100141, -0.226427, 0.109567, 0.100141, -0.196427, 0.138826, 0.100141, -0.145747, 0.0510465, 0.100141, -0.066427, 0.0217865, 0.100141, -0.145747, 0.0217865, 0.100141, -0.0157472, 0.0217865, 0.100141, -0.145747, 0.0510465, 0.100141, -0.066427, 0.0510465, 0.100141, -0.0950674, 0.0510465, 0.100141, -0.0950674, 0.0510465, 0.100141, -0.066427, 0.109567, 0.100141, -0.066427, 0.109567, 0.100141, -0.0950674, 0.109567, 0.100141, -0.0950674, 0.109567, 0.100141, -0.066427, 0.138826, 0.100141, -0.0157472, 0.109567, 0.100141, -0.0950674, 0.138826, 0.100141, -0.0157472, 0.138826, 0.100141, -0.145747, -0.108953, 0.100141, -0.066427, -0.138213, 0.100141, -0.145747, -0.138213, 0.100141, -0.0157472, -0.138213, 0.100141, -0.145747, -0.108953, 0.100141, -0.066427, -0.108953, 0.100141, -0.0950674, -0.108953, 0.100141, -0.0950674, -0.108953, 0.100141, -0.066427, -0.0504335, 0.100141, -0.066427, -0.0504335, 0.100141, -0.0950674, -0.0211735, 0.100141, -0.0157472, -0.0504335, 0.100141, -0.0950674, -0.0211735, 0.100141, -0.0157472, -0.0211735, 0.100141, -0.145747, -0.100507, 0.100141, -0.109697, -0.100507, 0.100141, -0.181797, -0.12132, 0.100141, -0.145747, -0.100507, 0.100141, -0.181797, -0.100507, 0.100141, -0.109697, -0.0588801, 0.100141, -0.109697, -0.0588801, 0.100141, -0.181797, -0.0588801, 0.100141, -0.181797, -0.0588801, 0.100141, -0.109697, -0.0380668, 0.100141, -0.145747, 0.0594932, 0.100141, -0.109697, 0.0594932, 0.100141, -0.181797, 0.0386798, 0.100141, -0.145747, 0.0594932, 0.100141, -0.181797, 0.0594932, 0.100141, -0.109697, 0.10112, 0.100141, -0.109697, 0.10112, 0.100141, -0.181797, 0.10112, 0.100141, -0.181797, 0.10112, 0.100141, -0.109697, 0.121933, 0.100141, -0.145747, 0.0594932, 0.100141, 0.0203026, 0.0594932, 0.100141, -0.051797, 0.0386798, 0.100141, -0.0157472, 0.0594932, 0.100141, -0.051797, 0.0594932, 0.100141, 0.0203026, 0.10112, 0.100141, 0.0203026, 0.10112, 0.100141, -0.051797, 0.10112, 0.100141, -0.051797, 0.10112, 0.100141, 0.0203026, 0.121933, 0.100141, -0.0157472, -0.100507, 0.100141, 0.0203026, -0.100507, 0.100141, -0.051797, -0.12132, 0.100141, -0.0157472, -0.0588801, 0.100141, 0.0203026, -0.0588801, 0.100141, -0.051797, -0.0588801, 0.100141, -0.051797, -0.0588801, 0.100141, 0.0203026, -0.0380668, 0.100141, -0.0157472),
		Vector3Array(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.413781, 0.910376, 1.97257e-05, 0.413781, 0.910376, -1.98474e-05, 0.413781, 0.910376, -1.98474e-05, 0.413803, 0.910366, 0.0, 0.413803, 0.910366, 0.0, 0.413803, 0.910366, 0.0, 0.413803, 0.910367, 0.0, 0.413803, 0.910367, 0.0, 0.413803, 0.910367, 0.0, 0.0, 0.923834, -0.382794, 0.0, 0.923834, -0.382794, 0.0, 0.923834, -0.382794, 0.0, 0.923835, -0.382792, 0.0, 0.923835, -0.382792, 0.0, 0.923835, -0.382792, -0.413803, 0.910367, 0.0, -0.413803, 0.910367, 0.0, -0.413803, 0.910367, 0.0, -0.413803, 0.910367, 0.0, -0.413803, 0.910367, 0.0, -0.413803, 0.910367, 0.0, 0.910357, 0.413825, -4.3666e-05, 0.910357, 0.413825, 4.33983e-05, 0.910357, 0.413825, 4.3666e-05, 0.0, 0.910366, 0.413803, 0.0, 0.910366, 0.413803, 0.0, 0.910366, 0.413803, 0.0, 0.910367, 0.413802, 0.0, 0.910367, 0.413802, 0.0, 0.910367, 0.413802, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -2.45598e-06, 1.0, 0.0, -2.45598e-06, 1.0, 0.0, -2.45598e-06, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -6.1517e-07, 1.0, 0.0, -6.1517e-07, 1.0, 0.0, -6.1517e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.73691e-06, 1.0, 0.0, -1.73691e-06, 1.0, 0.0, -1.73691e-06, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, -6.69848e-07, -1.0, 0.0, -6.69848e-07, -1.0, 0.0, -6.69848e-07, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.42202e-06, 1.0, 0.0, -1.42202e-06, 1.0, 0.0, -1.42202e-06, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.42202e-06, 1.0, 0.0, 1.42202e-06, 1.0, 0.0, 1.42202e-06, 1.0, 0.0, -1.42201e-06, 1.0, 0.0, -1.42201e-06, 1.0, 0.0, -1.42201e-06, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.42201e-06, 1.0, 0.0, 1.42201e-06, 1.0, 0.0, 1.42201e-06, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.42202e-06, 1.0, 0.0, -1.42202e-06, 1.0, 0.0, -1.42202e-06, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.42201e-06, 1.0, 0.0, 1.42201e-06, 1.0, 0.0, 1.42201e-06, 1.0, 0.0, -1.42202e-06, 1.0, 0.0, -1.42202e-06, 1.0, 0.0, -1.42202e-06, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.42202e-06, 1.0, 0.0, 1.42202e-06, 1.0, 0.0, 1.42202e-06, 1.0, 0.0, 3.71744e-07, 1.0, 0.0, 3.71744e-07, 1.0, 0.0, 3.71744e-07, 1.0, 0.0, -1.18196e-07, 1.0, 0.0, -1.18196e-07, 1.0, 0.0, -1.18196e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 2.36392e-07, 1.0, 0.0, 2.36392e-07, 1.0, 0.0, 2.36392e-07, 1.0, 0.0, -8.12881e-07, 1.0, 0.0, -8.12881e-07, 1.0, 0.0, -8.12881e-07, 1.0, 0.0, -8.12881e-07, 1.0, 0.0, -8.12881e-07, 1.0, 0.0, -8.12881e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -2.24562e-07, 1.0, 0.0, -2.24562e-07, 1.0, 0.0, -2.24562e-07, 1.0, 0.0, -4.8968e-07, 1.0, 0.0, -4.8968e-07, 1.0, 0.0, -4.8968e-07, 1.0, 0.0, 5.5567e-07, 1.0, 0.0, 5.5567e-07, 1.0, 0.0, 5.5567e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 4.89681e-07, 1.0, 0.0, 4.89681e-07, 1.0, 0.0, 4.89681e-07, 1.0, 0.0, -4.8968e-07, 1.0, 0.0, -4.8968e-07, 1.0, 0.0, -4.8968e-07, 1.0, 0.0, 5.5567e-07, 1.0, 0.0, 5.5567e-07, 1.0, 0.0, 5.5567e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 4.8968e-07, 1.0, 0.0, 4.8968e-07, 1.0, 0.0, 4.8968e-07, 1.0, 0.0, 3.10309e-07, 1.0, 0.0, 3.10309e-07, 1.0, 0.0, 3.10309e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -3.1031e-07, 1.0, 0.0, -3.1031e-07, 1.0, 0.0, -3.1031e-07, 1.0, 0.0, 3.10309e-07, 1.0, 0.0, 3.10309e-07, 1.0, 0.0, 3.10309e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -3.10309e-07, 1.0, 0.0, -3.10309e-07, 1.0, 0.0, -3.10309e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0),
		FloatArray(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -8.08726e-08, 0.0, 1.0, 1.0, -8.08726e-08, 0.0, 1.0, 1.0, -8.08726e-08, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -3.87789e-08, 0.0, 1.0, 1.0, -7.6694e-08, 0.0, 1.0, 1.0, -7.6694e-08, 0.0, 1.0, 1.0, -3.8347e-08, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 7.66941e-08, 0.0, 1.0, 1.0, 7.66941e-08, 0.0, 1.0, 1.0, 3.83471e-08, 0.0, 1.0, 1.0, 3.8347e-08, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -6.69848e-07, 0.0, 1.0, 1.0, -6.69848e-07, 0.0, 1.0, 1.0, -6.69848e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -6.13552e-07, 1.0, 1.0, 0.0, -6.13552e-07, 1.0, 1.0, 0.0, -6.13552e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -4.95196e-08, -1.0, 1.0, 0.0, -6.78512e-07, -1.0, 1.0, 0.0, -5.29447e-08, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, -3.8815e-07, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 1.0, 1.42202e-06, 5.77909e-07, 1.0, 1.0, 1.42202e-06, 5.77909e-07, 1.0, 1.0, 1.42202e-06, 5.77909e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 2.12778e-08, 1.0, 1.0, 0.0, -2.33067e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -1.42202e-06, -4.33431e-07, 1.0, 1.0, -1.42202e-06, -4.33431e-07, 1.0, 1.0, -1.42202e-06, -4.33431e-07, 1.0, 1.0, 1.42201e-06, 5.77906e-07, 1.0, 1.0, 1.42201e-06, 5.77906e-07, 1.0, 1.0, 1.42201e-06, 5.77906e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -1.42201e-06, -4.3343e-07, 1.0, 1.0, -1.42201e-06, -4.3343e-07, 1.0, 1.0, -1.42201e-06, -4.3343e-07, 1.0, 1.0, 0.0, 1.4109e-07, 1.0, 1.0, 0.0, 1.01139e-07, 1.0, 1.0, 0.0, 2.82181e-07, 1.0, 1.0, 0.0, -1.41091e-07, 1.0, 1.0, 0.0, -1.41091e-07, 1.0, 1.0, 0.0, -5.64365e-07, 1.0, 1.0, 1.42202e-06, 5.77907e-07, 1.0, 1.0, 1.42202e-06, 5.77907e-07, 1.0, 1.0, 1.42202e-06, 5.77907e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 4.67388e-09, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -1.42201e-06, -4.3343e-07, 1.0, 1.0, -1.42201e-06, -4.3343e-07, 1.0, 1.0, -1.42201e-06, -4.3343e-07, 1.0, 1.0, 1.42202e-06, 5.77907e-07, 1.0, 1.0, 1.42202e-06, 5.77907e-07, 1.0, 1.0, 1.42202e-06, 5.77907e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -1.42202e-06, -4.33431e-07, 1.0, 1.0, -1.42202e-06, -4.33431e-07, 1.0, 1.0, -1.42202e-06, -4.33431e-07, 1.0, 1.0, -3.71744e-07, -1.51077e-07, 1.0, 1.0, -3.71744e-07, -1.51077e-07, 1.0, 1.0, -3.71744e-07, -1.51077e-07, 1.0, 1.0, 1.18196e-07, 0.0, 1.0, 1.0, 1.18196e-07, 0.0, 1.0, 1.0, 1.18196e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 8.16914e-09, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -3.77326e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -4.84353e-08, 1.0, 1.0, -2.36392e-07, 2.40174e-08, 1.0, 1.0, -2.36392e-07, 2.40174e-08, 1.0, 1.0, -2.36392e-07, 2.40174e-08, 1.0, 1.0, 8.12881e-07, 1.65177e-07, 1.0, 1.0, 8.12881e-07, 1.65177e-07, 1.0, 1.0, 8.12881e-07, 1.65177e-07, 1.0, 1.0, 8.12881e-07, -1.65177e-07, 1.0, 1.0, 8.12881e-07, -1.65177e-07, 1.0, 1.0, 8.12881e-07, -1.65177e-07, 1.0, 1.0, 0.0, -5.51445e-08, 1.0, 1.0, 0.0, -1.28212e-07, 1.0, 1.0, 0.0, -9.68881e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.51077e-07, 1.0, 1.0, 0.0, 1.51077e-07, 1.0, 1.0, 0.0, 1.51077e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 2.24562e-07, 2.28155e-07, 1.0, 1.0, 2.24562e-07, 2.28155e-07, 1.0, 1.0, 2.24562e-07, 2.28155e-07, 1.0, 1.0, 4.8968e-07, -9.9503e-08, 1.0, 1.0, 4.8968e-07, -9.9503e-08, 1.0, 1.0, 4.8968e-07, -9.9503e-08, 1.0, 1.0, -5.5567e-07, 4.51649e-07, 1.0, 1.0, -5.5567e-07, 4.51649e-07, 1.0, 1.0, -5.5567e-07, 4.51649e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 3.23422e-08, 1.0, 1.0, 0.0, 2.25825e-07, 1.0, 1.0, 0.0, 2.25824e-07, 1.0, 1.0, 0.0, 2.25824e-07, 1.0, 1.0, -4.89681e-07, -9.95031e-08, 1.0, 1.0, -4.89681e-07, -9.95031e-08, 1.0, 1.0, -4.89681e-07, -9.95031e-08, 1.0, 1.0, 4.8968e-07, -9.9503e-08, 1.0, 1.0, 4.8968e-07, -9.9503e-08, 1.0, 1.0, 4.8968e-07, -9.9503e-08, 1.0, 1.0, -5.5567e-07, 4.51649e-07, 1.0, 1.0, -5.5567e-07, 4.51649e-07, 1.0, 1.0, -5.5567e-07, 4.51649e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.12912e-07, 1.0, 1.0, 0.0, 4.93572e-08, 1.0, 1.0, 0.0, 2.25824e-07, 1.0, 1.0, -4.8968e-07, -9.9503e-08, 1.0, 1.0, -4.8968e-07, -9.9503e-08, 1.0, 1.0, -4.8968e-07, -9.9503e-08, 1.0, 1.0, -3.10309e-07, -1.2611e-07, 1.0, 1.0, -3.10309e-07, -1.2611e-07, 1.0, 1.0, -3.10309e-07, -1.2611e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 5.64995e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 3.1031e-07, 1.2611e-07, 1.0, 1.0, 3.1031e-07, 1.2611e-07, 1.0, 1.0, 3.1031e-07, 1.2611e-07, 1.0, 1.0, -3.10309e-07, -1.2611e-07, 1.0, 1.0, -3.10309e-07, -1.2611e-07, 1.0, 1.0, -3.10309e-07, -1.2611e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 5.64995e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 3.10309e-07, 1.2611e-07, 1.0, 1.0, 3.10309e-07, 1.2611e-07, 1.0, 1.0, 3.10309e-07, 1.2611e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -1.12999e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -1.3811e-07, 1.0, 1.0, 0.0, -2.10879e-08, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(15.8723, -0.574803, 1.05686, -14.748, 1.05686, -0.574803, 15.8723, -14.748, -15.8723, -14.748, -1.05686, -0.574803, -1.05686, -14.748, -15.8723, -0.574803, 15.8723, -2.34984, 14.547, -7.03626, 1.05686, -2.34984, 14.547, -7.03626, 15.8723, -2.34984, 15.8723, -7.82366, 14.547, -7.03626, 15.8723, -7.82366, 14.547, -7.82366, 2.3821, -7.03626, 1.05686, -7.82366, 2.3821, -7.82366, 2.40157, 8.0102, 15.584, 8.0102, 4.3924, 8.0102, 15.584, 8.0102, 2.40157, 8.0102, 1.9685, 8.48592, 15.584, 8.0102, 1.9685, 8.48592, 16.0591, 8.48592, -1.62313, 8.99204, -15.7391, 9.50629, -1.19006, 9.50629, -15.7391, 9.50629, -1.62313, 8.99204, -15.306, 8.99204, -2.40157, -7.40151, -16.0591, -6.9258, -1.9685, -6.9258, -16.0591, -6.9258, -2.40157, -7.40151, -15.584, -7.40151, -15.584, -7.40151, -2.40157, -7.40151, -4.3924, -7.40151, 15.7391, -7.63447, 1.62313, -8.11018, 1.19006, -7.63447, 1.62313, -8.11018, 15.7391, -7.63447, 15.306, -8.11018, -15.8723, -14.748, -14.547, -1.3622, -14.547, -14.748, -15.8723, -1.3622, 15.8723, -13.2975, 13.9399, -8.43083, 15.8723, -8.43083, 2.98927, -8.43083, 2.98927, -8.43083, 15.8723, -13.2975, 1.05686, -8.43083, 1.05686, -8.43083, 1.05686, -13.2975, 2.98927, -7.64342, 13.9399, -7.64342, 15.8723, -1.3622, 13.9399, -14.748, 13.9399, -1.3622, 15.8723, -14.748, -15.748, -8.43083, -2.3622, -7.64342, -2.3622, -8.43083, -15.748, -7.64342, 13.9399, -1.3622, 2.98927, -14.748, 2.98927, -1.3622, 13.9399, -14.748, 15.748, -7.64342, 2.3622, -8.43083, 2.3622, -7.64342, 15.748, -8.43083, 2.98927, -1.3622, 1.05686, -14.748, 1.05686, -1.3622, 2.98927, -14.748, -2.3821, -14.748, -1.05686, -1.3622, -1.05686, -14.748, -2.3821, -1.3622, -15.748, -7.82366, -2.3622, -7.03626, -2.3622, -7.82366, -15.748, -7.03626, -14.547, -14.748, -2.3821, -1.3622, -2.3821, -14.748, -14.547, -1.3622, 15.748, -7.03626, 2.3622, -7.82366, 2.3622, -7.03626, 15.748, -7.82366, 15.8723, -8.43083, 14.547, -7.82366, 15.8723, -7.82366, 13.9399, -8.43083, 14.547, -7.82366, 15.8723, -8.43083, 13.9399, -7.64342, 14.547, -7.82366, 13.9399, -8.43083, 14.547, -7.03626, 2.3821, -7.03626, 2.98927, -7.64342, 2.3821, -7.03626, 13.9399, -7.64342, 2.3821, -7.03626, 2.98927, -7.64342, 2.3821, -7.82366, 2.98927, -8.43083, 1.05686, -7.82366, 1.05686, -8.43083, -1.5748, -13.2975, -2.3622, -8.43083, -1.5748, -2.34984, -2.3622, -8.43083, -1.5748, -13.2975, -15.748, -13.2975, -15.748, -8.43083, -2.3622, -7.82366, -1.5748, -2.34984, -2.3622, -8.43083, -1.5748, -2.34984, -2.3622, -7.82366, -15.748, -2.34984, -15.748, -2.34984, -2.3622, -7.82366, -15.748, -7.82366, 1.5748, -2.34984, 2.3622, -7.82366, 1.5748, -13.2975, 15.748, -2.34984, 15.748, -7.82366, 2.3622, -8.43083, 15.748, -13.2975, 15.748, -8.43083, 10.6299, -1.90717, 10.6299, -2.8448, 10.3593, -2.37598, 10.6299, -2.8448, 10.6299, -1.90717, 11.1713, -1.90717, 11.1713, -2.8448, 11.1713, -2.8448, 11.1713, -1.90717, 11.4419, -2.37598, 13.3366, -1.90717, 13.3366, -2.8448, 13.0659, -2.37598, 13.3366, -2.8448, 13.3366, -1.90717, 13.878, -1.90717, 13.878, -2.8448, 13.878, -2.8448, 13.878, -1.90717, 14.1486, -2.37598, 8.24803, -2.00093, 8.24803, -2.75103, 8.0315, -2.37598, 8.6811, -2.75103, 8.6811, -2.00093, 8.89764, -2.37598, 5.75787, -1.90717, 5.75787, -2.8448, 5.4872, -2.37598, 5.75787, -2.8448, 5.75787, -1.90717, 6.29921, -1.90717, 5.75787, -2.8448, 6.29921, -1.90717, 6.29921, -2.8448, 6.29921, -2.8448, 6.29921, -1.90717, 6.56988, -2.37598, 3.05118, -1.90717, 3.05118, -2.8448, 2.78051, -2.37598, 3.05118, -2.8448, 3.05118, -1.90717, 3.59252, -1.90717, 3.05118, -2.8448, 3.59252, -1.90717, 3.59252, -2.8448, 3.59252, -2.8448, 3.59252, -1.90717, 3.86319, -2.37598, 1.62313, -3.3924, 3.01102, -6.28952, 1.62313, -14.584, 3.01102, -6.28952, 1.62313, -3.3924, 4.16299, -4.29425, 4.16299, -4.29425, 1.62313, -3.3924, 15.306, -3.3924, 6.46693, -4.29425, 10.4622, -4.29425, 7.6189, -6.28952, 9.31024, -6.28952, 7.6189, -11.4076, 12.7661, -4.29425, 12.7661, -4.29425, 15.306, -3.3924, 13.9181, -6.28952, 13.9181, -6.28952, 15.306, -3.3924, 13.9181, -11.4076, 3.01102, -11.4076, 1.62313, -14.584, 3.01102, -6.28952, 4.16299, -13.4029, 1.62313, -14.584, 3.01102, -11.4076, 15.306, -14.584, 15.306, -14.584, 13.9181, -11.4076, 15.306, -3.3924, 6.46693, -13.4029, 10.4622, -13.4029, 10.4622, -13.4029, 7.6189, -11.4076, 9.31024, -11.4076, 9.31024, -11.4076, 12.7661, -13.4029, 15.306, -14.584, 12.7661, -13.4029, 13.9181, -11.4076, 10.4622, -8.28479, 9.31024, -11.4076, 9.31024, -6.28952, 9.31024, -11.4076, 10.4622, -8.28479, 10.4622, -9.41236, 10.4622, -9.41236, 10.4622, -8.28479, 12.7661, -8.28479, 12.7661, -9.41236, 12.7661, -9.41236, 12.7661, -8.28479, 13.9181, -6.28952, 12.7661, -9.41236, 13.9181, -6.28952, 13.9181, -11.4076, 4.16299, -8.28479, 3.01102, -11.4076, 3.01102, -6.28952, 3.01102, -11.4076, 4.16299, -8.28479, 4.16299, -9.41236, 4.16299, -9.41236, 4.16299, -8.28479, 6.46693, -8.28479, 6.46693, -9.41236, 7.6189, -6.28952, 6.46693, -9.41236, 7.6189, -6.28952, 7.6189, -11.4076, 4.49554, -9.98835, 4.49554, -12.8269, 3.67611, -11.4076, 4.49554, -12.8269, 4.49554, -9.98835, 6.13438, -9.98835, 6.13438, -12.8269, 6.13438, -12.8269, 6.13438, -9.98835, 6.95381, -11.4076, 10.7947, -9.98835, 10.7947, -12.8269, 9.97533, -11.4076, 10.7947, -12.8269, 10.7947, -9.98835, 12.4336, -9.98835, 12.4336, -12.8269, 12.4336, -12.8269, 12.4336, -9.98835, 13.253, -11.4076, 10.7947, -4.87023, 10.7947, -7.7088, 9.97533, -6.28952, 10.7947, -7.7088, 10.7947, -4.87023, 12.4336, -4.87023, 12.4336, -7.7088, 12.4336, -7.7088, 12.4336, -4.87023, 13.253, -6.28952, 4.49554, -4.87023, 4.49554, -7.7088, 3.67611, -6.28952, 6.13438, -4.87023, 6.13438, -7.7088, 6.13438, -7.7088, 6.13438, -4.87023, 6.95381, -6.28952),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 1, 3, 0, 4, 6, 5, 5, 7, 4, 8, 10, 9, 11, 13, 12, 14, 16, 15, 17, 9, 10, 10, 18, 17, 18, 19, 17, 20, 22, 21, 23, 25, 24, 26, 28, 27, 29, 31, 30, 32, 34, 33, 35, 37, 36, 38, 40, 39, 41, 43, 42, 44, 46, 45, 47, 49, 48, 50, 52, 51, 51, 53, 50, 54, 56, 55, 55, 57, 54, 58, 60, 59, 61, 62, 54, 63, 57, 55, 55, 64, 63, 65, 67, 66, 66, 68, 65, 69, 71, 70, 70, 72, 69, 73, 75, 74, 74, 76, 73, 77, 79, 78, 78, 80, 77, 81, 83, 82, 82, 84, 81, 85, 87, 86, 86, 88, 85, 89, 91, 90, 90, 92, 89, 93, 95, 94, 94, 96, 93, 97, 99, 98, 98, 100, 97, 101, 103, 102, 104, 106, 105, 107, 109, 108, 107, 108, 110, 110, 111, 107, 112, 114, 113, 115, 117, 116, 117, 118, 116, 117, 119, 118, 119, 120, 118, 121, 123, 122, 124, 126, 125, 124, 127, 126, 128, 130, 129, 131, 133, 132, 134, 136, 135, 137, 139, 138, 138, 140, 137, 138, 141, 140, 142, 138, 139, 139, 143, 142, 143, 144, 142, 145, 147, 146, 148, 150, 149, 148, 151, 150, 152, 154, 153, 155, 157, 156, 158, 160, 159, 158, 161, 160, 162, 164, 163, 165, 167, 166, 166, 168, 165, 168, 169, 165, 168, 170, 169, 171, 173, 172, 174, 176, 175, 177, 179, 178, 180, 182, 181, 183, 185, 184, 186, 188, 187, 189, 191, 190, 192, 194, 193, 195, 197, 196, 198, 200, 199, 201, 203, 202, 201, 204, 203, 204, 205, 203, 204, 206, 205, 206, 207, 205, 206, 208, 207, 205, 209, 203, 210, 212, 211, 213, 215, 214, 216, 218, 217, 219, 221, 220, 220, 222, 219, 223, 225, 224, 222, 226, 219, 222, 227, 226, 227, 208, 226, 228, 230, 229, 231, 207, 208, 222, 232, 227, 233, 235, 234, 236, 238, 237, 239, 241, 240, 242, 244, 243, 242, 245, 244, 246, 248, 247, 249, 251, 250, 252, 254, 253, 255, 257, 256, 258, 260, 259, 258, 261, 260, 261, 262, 260, 263, 265, 264, 266, 268, 267, 269, 271, 270, 269, 272, 271, 273, 275, 274, 276, 278, 277, 279, 281, 280, 279, 282, 281, 283, 285, 284, 286, 288, 287, 289, 291, 290, 289, 292, 291, 293, 295, 294, 296, 298, 297, 297, 299, 296, 297, 300, 299, 301, 303, 302)
	],
	"morph_arrays":[]
}
surfaces/3 = {
	"material":SubResource(8),
	"primitive":4,
	"arrays":[
		Vector3Array(-0.173466, 0.100141, 0.108407, -0.137193, 0.100141, 0.0955644, -0.173466, 0.100141, 0.0578395, -0.137193, 0.100141, 0.0955644, -0.173466, 0.100141, 0.108407, 0.174079, 0.100141, 0.108407, -0.173466, 0.100141, 0.0578395, -0.137193, 0.100141, 0.0955644, -0.144068, 0.100141, 0.0836565, -0.123443, 0.100141, 0.0955644, -0.0684435, 0.100141, 0.0955644, -0.116568, 0.100141, 0.0836565, -0.0753185, 0.100141, 0.0836565, -0.0546935, 0.100141, 0.0955644, -0.00519349, 0.100141, 0.0931828, -0.0478185, 0.100141, 0.0836565, -0.0106935, 0.100141, 0.0836565, 0.00580652, 0.100141, 0.0931828, 0.0553065, 0.100141, 0.0955644, 0.0113065, 0.100141, 0.0836565, 0.0484315, 0.100141, 0.0836565, 0.0690565, 0.100141, 0.0955644, 0.0759315, 0.100141, 0.0836565, 0.0759315, 0.100141, 0.0836565, 0.174079, 0.100141, 0.108407, 0.124057, 0.100141, 0.0955644, 0.0759315, 0.100141, 0.0836565, 0.124057, 0.100141, 0.0955644, 0.117182, 0.100141, 0.0836565, 0.124057, 0.100141, 0.0955644, 0.174079, 0.100141, 0.108407, 0.137807, 0.100141, 0.0955644, 0.144682, 0.100141, 0.0836565, 0.144682, 0.100141, 0.0836565, 0.174079, 0.100141, 0.108407, 0.174079, 0.100141, 0.0578395, -0.00519349, 0.100141, 0.0741303, -0.0478185, 0.100141, 0.0836565, -0.0106935, 0.100141, 0.0836565, 0.174079, 0.100141, 0.0578395, -0.0546935, 0.100141, 0.0717487, -0.00519349, 0.100141, 0.0741303, -0.00519349, 0.100141, 0.0741303, -0.0546935, 0.100141, 0.0717487, -0.0478185, 0.100141, 0.0836565, 0.174079, 0.100141, 0.0578395, -0.0684435, 0.100141, 0.0717487, -0.0546935, 0.100141, 0.0717487, -0.123443, 0.100141, 0.0717487, -0.137193, 0.100141, 0.0717487, 0.174079, 0.100141, 0.0578395, -0.00519349, 0.100141, 0.0741303, 0.00580652, 0.100141, 0.0741303, 0.174079, 0.100141, 0.0578395, 0.00580652, 0.100141, 0.0741303, 0.0553065, 0.100141, 0.0717487, 0.0553065, 0.100141, 0.0717487, 0.00580652, 0.100141, 0.0741303, 0.0113065, 0.100141, 0.0836565, 0.0553065, 0.100141, 0.0717487, 0.0113065, 0.100141, 0.0836565, 0.0484315, 0.100141, 0.0836565, 0.0553065, 0.100141, 0.0717487, 0.0690565, 0.100141, 0.0717487, 0.174079, 0.100141, 0.0578395, 0.0690565, 0.100141, 0.0717487, 0.0759315, 0.100141, 0.0836565, 0.174079, 0.100141, 0.0578395, 0.0759315, 0.100141, 0.0836565, 0.124057, 0.100141, 0.0717487, 0.124057, 0.100141, 0.0717487, 0.137807, 0.100141, 0.0717487, 0.174079, 0.100141, 0.0578395, 0.137807, 0.100141, 0.0717487, 0.144682, 0.100141, 0.0836565),
		Vector3Array(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.04093e-05, 1.0, 0.0, -1.04093e-05, 1.0, 0.0, -1.04093e-05, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -7.07926e-08, 1.0, 0.0, -7.07926e-08, 1.0, 0.0, -7.07926e-08, 1.0, 0.0, -4.0629e-07, 1.0, 0.0, -4.0629e-07, 1.0, 0.0, -4.0629e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 2.15243e-07, 1.0, 0.0, 2.15243e-07, 1.0, 0.0, 2.15243e-07, 1.0, 0.0, 2.40205e-07, 1.0, 0.0, 2.40205e-07, 1.0, 0.0, 2.40205e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.72952e-07, 1.0, 0.0, -1.72952e-07, 1.0, 0.0, -1.72952e-07, 1.0, 0.0, 3.15832e-06, 1.0, 0.0, 3.15832e-06, 1.0, 0.0, 3.15832e-06, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -4.41341e-07, 1.0, 0.0, -4.41341e-07, 1.0, 0.0, -4.41341e-07, 1.0, 0.0),
		FloatArray(1.0, 0.0, 1.80558e-07, 1.0, 1.0, 0.0, 1.80558e-07, 1.0, 1.0, 0.0, 1.80558e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -5.6758e-08, 1.0, 1.0, 0.0, 8.16914e-09, 1.0, 1.0, 0.0, -5.48316e-07, 1.0, 1.0, 0.0, -3.1702e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 4.67388e-09, 1.0, 1.0, 0.0, -7.34552e-09, 1.0, 1.0, 0.0, 2.30909e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -7.55501e-09, 1.0, 1.0, 0.0, 2.12778e-08, 1.0, 1.0, 0.0, -2.66564e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -2.33067e-08, 1.0, 1.0, 0.0, -1.14843e-07, 1.0, 1.0, 1.04093e-05, 6.3452e-06, 1.0, 1.0, 1.04093e-05, 6.3452e-06, 1.0, 1.0, 1.04093e-05, 6.3452e-06, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -2.36932e-07, 1.0, 1.0, 0.0, -9.79035e-08, 1.0, 1.0, 0.0, -2.95571e-07, 1.0, 1.0, 0.0, -6.36526e-08, 1.0, 1.0, 0.0, -6.36526e-08, 1.0, 1.0, 0.0, -6.36526e-08, 1.0, 1.0, 0.0, 1.01139e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 2.82181e-07, 1.0, 1.0, 7.07926e-08, -3.83602e-08, 1.0, 1.0, 7.07926e-08, -3.83602e-08, 1.0, 1.0, 7.07926e-08, -3.83602e-08, 1.0, 1.0, 4.0629e-07, -2.32195e-08, 1.0, 1.0, 4.0629e-07, -2.32195e-08, 1.0, 1.0, 4.0629e-07, -2.32195e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 5.29545e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -2.15243e-07, 1.16634e-07, 1.0, 1.0, -2.15243e-07, 1.16634e-07, 1.0, 1.0, -2.15243e-07, 1.16634e-07, 1.0, 1.0, -2.40205e-07, 2.44049e-08, 1.0, 1.0, -2.40205e-07, 2.44049e-08, 1.0, 1.0, -2.40205e-07, 2.44049e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.72952e-07, -7.02876e-08, 1.0, 1.0, 1.72952e-07, -7.02876e-08, 1.0, 1.0, 1.72952e-07, -7.02876e-08, 1.0, 1.0, -3.15832e-06, 1.28355e-06, 1.0, 1.0, -3.15832e-06, 1.28355e-06, 1.0, 1.0, -3.15832e-06, 1.28355e-06, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 4.41341e-07, -1.79361e-07, 1.0, 1.0, 4.41341e-07, -1.79361e-07, 1.0, 1.0, 4.41341e-07, -1.79361e-07, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(1.62313, -1.40157, 3.05118, -1.90717, 1.62313, -3.3924, 3.05118, -1.90717, 1.62313, -1.40157, 15.306, -1.40157, 1.62313, -3.3924, 3.05118, -1.90717, 2.78051, -2.37598, 3.59252, -1.90717, 5.75787, -1.90717, 3.86319, -2.37598, 5.4872, -2.37598, 6.29921, -1.90717, 8.24803, -2.00093, 6.56988, -2.37598, 8.0315, -2.37598, 8.6811, -2.00093, 10.6299, -1.90717, 8.89764, -2.37598, 10.3593, -2.37598, 11.1713, -1.90717, 11.4419, -2.37598, 11.4419, -2.37598, 15.306, -1.40157, 13.3366, -1.90717, 11.4419, -2.37598, 13.3366, -1.90717, 13.0659, -2.37598, 13.3366, -1.90717, 15.306, -1.40157, 13.878, -1.90717, 14.1486, -2.37598, 14.1486, -2.37598, 15.306, -1.40157, 15.306, -3.3924, 8.24803, -2.75103, 6.56988, -2.37598, 8.0315, -2.37598, 15.306, -3.3924, 6.29921, -2.8448, 8.24803, -2.75103, 8.24803, -2.75103, 6.29921, -2.8448, 6.56988, -2.37598, 15.306, -3.3924, 5.75787, -2.8448, 6.29921, -2.8448, 3.59252, -2.8448, 3.05118, -2.8448, 15.306, -3.3924, 8.24803, -2.75103, 8.6811, -2.75103, 15.306, -3.3924, 8.6811, -2.75103, 10.6299, -2.8448, 10.6299, -2.8448, 8.6811, -2.75103, 8.89764, -2.37598, 10.6299, -2.8448, 8.89764, -2.37598, 10.3593, -2.37598, 10.6299, -2.8448, 11.1713, -2.8448, 15.306, -3.3924, 11.1713, -2.8448, 11.4419, -2.37598, 15.306, -3.3924, 11.4419, -2.37598, 13.3366, -2.8448, 13.3366, -2.8448, 13.878, -2.8448, 15.306, -3.3924, 13.878, -2.8448, 14.1486, -2.37598),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 3, 9, 5, 9, 10, 5, 9, 11, 10, 11, 12, 10, 10, 13, 5, 13, 14, 5, 13, 15, 14, 15, 16, 14, 14, 17, 5, 17, 18, 5, 17, 19, 18, 19, 20, 18, 18, 21, 5, 21, 22, 5, 23, 25, 24, 26, 28, 27, 29, 31, 30, 31, 32, 30, 33, 35, 34, 36, 38, 37, 39, 41, 40, 42, 44, 43, 45, 47, 46, 45, 46, 48, 45, 48, 49, 6, 45, 49, 49, 8, 6, 46, 11, 48, 46, 12, 11, 50, 52, 51, 53, 55, 54, 56, 58, 57, 59, 61, 60, 45, 63, 62, 64, 66, 65, 67, 69, 68, 70, 28, 26, 45, 71, 70, 72, 74, 73)
	],
	"morph_arrays":[]
}
surfaces/4 = {
	"material":SubResource(10),
	"primitive":4,
	"arrays":[
		Vector3Array(-0.14688, -0.0363609, 0.129407, 0.14312, -0.197498, 0.129407, -0.14688, -0.197498, 0.129407, 0.14312, -0.0363609, 0.129407, -0.14688, -0.197498, 0.129407, 0.14312, -0.197498, 0.129407, -0.14688, -0.0363609, 0.129407, 0.14312, -0.0363609, 0.129407),
		Vector3Array(0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0),
		FloatArray(-1.0, 0.0, 0.0, 1.0, -1.0, -4.85639e-08, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 2.45136e-07, 0.0, 1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(-2.66984, -10.3582, -14.0872, -4.01419, -2.66984, -4.01419, -14.0872, -10.3582, -2.66984, -4.01419, -14.0872, -4.01419, -2.66984, -10.3582, -14.0872, -10.3582),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 1, 3, 0, 4, 6, 5, 7, 5, 6)
	],
	"morph_arrays":[]
}
surfaces/5 = {
	"material":SubResource(12),
	"primitive":4,
	"arrays":[
		Vector3Array(-0.108953, 0.100141, -0.0950674, -0.12132, 0.100141, -0.145747, -0.138213, 0.100141, -0.145747, -0.12132, 0.100141, -0.145747, -0.108953, 0.100141, -0.0950674, -0.100507, 0.100141, -0.109697, -0.100507, 0.100141, -0.109697, -0.108953, 0.100141, -0.0950674, -0.0504335, 0.100141, -0.0950674, -0.0588801, 0.100141, -0.109697, -0.0380668, 0.100141, -0.145747, -0.0211735, 0.100141, -0.145747, -0.12132, 0.100141, -0.145747, -0.108953, 0.100141, -0.196427, -0.138213, 0.100141, -0.145747, -0.108953, 0.100141, -0.196427, -0.12132, 0.100141, -0.145747, -0.100507, 0.100141, -0.181797, -0.100507, 0.100141, -0.181797, -0.0504335, 0.100141, -0.196427, -0.0588801, 0.100141, -0.181797, -0.0504335, 0.100141, -0.196427, -0.0588801, 0.100141, -0.181797, -0.0380668, 0.100141, -0.145747, -0.108953, 0.100141, 0.0349326, -0.12132, 0.100141, -0.0157472, -0.138213, 0.100141, -0.0157472, -0.12132, 0.100141, -0.0157472, -0.108953, 0.100141, 0.0349326, -0.100507, 0.100141, 0.0203026, -0.100507, 0.100141, 0.0203026, -0.108953, 0.100141, 0.0349326, -0.0504335, 0.100141, 0.0349326, -0.0588801, 0.100141, 0.0203026, -0.0380668, 0.100141, -0.0157472, -0.0211735, 0.100141, -0.0157472, -0.108953, 0.100141, -0.066427, -0.108953, 0.100141, -0.066427, -0.12132, 0.100141, -0.0157472, -0.100507, 0.100141, -0.051797, -0.108953, 0.100141, -0.066427, -0.100507, 0.100141, -0.051797, -0.0504335, 0.100141, -0.066427, -0.0504335, 0.100141, -0.066427, -0.0380668, 0.100141, -0.0157472, -0.0211735, 0.100141, -0.0157472, -0.0588801, 0.100141, -0.051797, -0.0504335, 0.100141, -0.066427, -0.0588801, 0.100141, -0.051797, -0.0380668, 0.100141, -0.0157472, 0.0510465, 0.100141, 0.0349326, 0.0386798, 0.100141, -0.0157472, 0.0217865, 0.100141, -0.0157472, 0.0386798, 0.100141, -0.0157472, 0.0510465, 0.100141, 0.0349326, 0.0594932, 0.100141, 0.0203026, 0.0594932, 0.100141, 0.0203026, 0.109567, 0.100141, 0.0349326, 0.10112, 0.100141, 0.0203026, 0.121933, 0.100141, -0.0157472, 0.138826, 0.100141, -0.0157472, 0.0510465, 0.100141, -0.066427, 0.0510465, 0.100141, -0.066427, 0.0386798, 0.100141, -0.0157472, 0.0594932, 0.100141, -0.051797, 0.0594932, 0.100141, -0.051797, 0.109567, 0.100141, -0.066427, 0.109567, 0.100141, -0.066427, 0.10112, 0.100141, -0.051797, 0.109567, 0.100141, -0.066427, 0.10112, 0.100141, -0.051797, 0.121933, 0.100141, -0.0157472, 0.0510465, 0.100141, -0.0950674, 0.0386798, 0.100141, -0.145747, 0.0217865, 0.100141, -0.145747, 0.0386798, 0.100141, -0.145747, 0.0510465, 0.100141, -0.0950674, 0.0594932, 0.100141, -0.109697, 0.0594932, 0.100141, -0.109697, 0.109567, 0.100141, -0.0950674, 0.10112, 0.100141, -0.109697, 0.121933, 0.100141, -0.145747, 0.138826, 0.100141, -0.145747, 0.0510465, 0.100141, -0.196427, 0.0510465, 0.100141, -0.196427, 0.0386798, 0.100141, -0.145747, 0.0594932, 0.100141, -0.181797, 0.0594932, 0.100141, -0.181797, 0.109567, 0.100141, -0.196427, 0.10112, 0.100141, -0.181797, 0.109567, 0.100141, -0.196427, 0.10112, 0.100141, -0.181797, 0.121933, 0.100141, -0.145747),
		Vector3Array(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 3.82317e-07, 1.0, 0.0, 3.82317e-07, 1.0, 0.0, 3.82317e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -7.64632e-07, 1.0, 0.0, -7.64632e-07, 1.0, 0.0, -7.64632e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 7.64633e-07, 1.0, 0.0, 7.64633e-07, 1.0, 0.0, 7.64633e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 3.82317e-07, 1.0, 0.0, 3.82317e-07, 1.0, 0.0, 3.82317e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 7.64634e-07, 1.0, 0.0, 7.64634e-07, 1.0, 0.0, 7.64634e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -7.64634e-07, 1.0, 0.0, -7.64634e-07, 1.0, 0.0, -7.64634e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 3.82317e-07, 1.0, 0.0, 3.82317e-07, 1.0, 0.0, 3.82317e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 7.64634e-07, 1.0, 0.0, 7.64634e-07, 1.0, 0.0, 7.64634e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -7.64634e-07, 1.0, 0.0, -7.64634e-07, 1.0, 0.0, -7.64634e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 3.82317e-07, 1.0, 0.0, 3.82317e-07, 1.0, 0.0, 3.82317e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -7.64633e-07, 1.0, 0.0, -7.64633e-07, 1.0, 0.0, -7.64633e-07, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 7.64633e-07, 1.0, 0.0, 7.64633e-07, 1.0, 0.0, 7.64633e-07, 1.0, 0.0),
		FloatArray(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -3.82317e-07, -3.10747e-07, 1.0, 1.0, -3.82317e-07, -3.10747e-07, 1.0, 1.0, -3.82317e-07, -3.10747e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 4.93572e-08, 1.0, 1.0, 0.0, 5.64995e-08, 1.0, 1.0, 0.0, 1.13116e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -5.51445e-08, 1.0, 1.0, 0.0, -9.68881e-08, 1.0, 1.0, 7.64632e-07, 0.0, 1.0, 1.0, 7.64632e-07, 0.0, 1.0, 1.0, 7.64632e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -7.64633e-07, 0.0, 1.0, 1.0, -7.64633e-07, 0.0, 1.0, 1.0, -7.64633e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -3.82317e-07, 0.0, 1.0, 1.0, -3.82317e-07, 0.0, 1.0, 1.0, -3.82317e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -3.77326e-08, 1.0, 1.0, 0.0, -1.3811e-07, 1.0, 1.0, 0.0, -2.10879e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -7.64634e-07, -3.10747e-07, 1.0, 1.0, -7.64634e-07, -3.10747e-07, 1.0, 1.0, -7.64634e-07, -3.10747e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.12912e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 7.64634e-07, 3.10747e-07, 1.0, 1.0, 7.64634e-07, 3.10747e-07, 1.0, 1.0, 7.64634e-07, 3.10747e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -3.82317e-07, 0.0, 1.0, 1.0, -3.82317e-07, 0.0, 1.0, 1.0, -3.82317e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -4.84353e-08, 1.0, 1.0, 0.0, -1.12999e-07, 1.0, 1.0, 0.0, -2.26231e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -7.64634e-07, -3.10747e-07, 1.0, 1.0, -7.64634e-07, -3.10747e-07, 1.0, 1.0, -7.64634e-07, -3.10747e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 7.64634e-07, 3.10747e-07, 1.0, 1.0, 7.64634e-07, 3.10747e-07, 1.0, 1.0, 7.64634e-07, 3.10747e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -3.82317e-07, -3.10747e-07, 1.0, 1.0, -3.82317e-07, -3.10747e-07, 1.0, 1.0, -3.82317e-07, -3.10747e-07, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 3.23422e-08, 1.0, 1.0, 0.0, 5.64995e-08, 1.0, 1.0, 0.0, 1.13116e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 7.64633e-07, 0.0, 1.0, 1.0, 7.64633e-07, 0.0, 1.0, 1.0, 7.64633e-07, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, -7.64633e-07, 0.0, 1.0, 1.0, -7.64633e-07, 0.0, 1.0, 1.0, -7.64633e-07, 0.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(4.16299, -9.41236, 3.67611, -11.4076, 3.01102, -11.4076, 3.67611, -11.4076, 4.16299, -9.41236, 4.49554, -9.98835, 4.49554, -9.98835, 4.16299, -9.41236, 6.46693, -9.41236, 6.13438, -9.98835, 6.95381, -11.4076, 7.6189, -11.4076, 3.67611, -11.4076, 4.16299, -13.4029, 3.01102, -11.4076, 4.16299, -13.4029, 3.67611, -11.4076, 4.49554, -12.8269, 4.49554, -12.8269, 6.46693, -13.4029, 6.13438, -12.8269, 6.46693, -13.4029, 6.13438, -12.8269, 6.95381, -11.4076, 4.16299, -4.29425, 3.67611, -6.28952, 3.01102, -6.28952, 3.67611, -6.28952, 4.16299, -4.29425, 4.49554, -4.87023, 4.49554, -4.87023, 4.16299, -4.29425, 6.46693, -4.29425, 6.13438, -4.87023, 6.95381, -6.28952, 7.6189, -6.28952, 4.16299, -8.28479, 4.16299, -8.28479, 3.67611, -6.28952, 4.49554, -7.7088, 4.16299, -8.28479, 4.49554, -7.7088, 6.46693, -8.28479, 6.46693, -8.28479, 6.95381, -6.28952, 7.6189, -6.28952, 6.13438, -7.7088, 6.46693, -8.28479, 6.13438, -7.7088, 6.95381, -6.28952, 10.4622, -4.29425, 9.97533, -6.28952, 9.31024, -6.28952, 9.97533, -6.28952, 10.4622, -4.29425, 10.7947, -4.87023, 10.7947, -4.87023, 12.7661, -4.29425, 12.4336, -4.87023, 13.253, -6.28952, 13.9181, -6.28952, 10.4622, -8.28479, 10.4622, -8.28479, 9.97533, -6.28952, 10.7947, -7.7088, 10.7947, -7.7088, 12.7661, -8.28479, 12.7661, -8.28479, 12.4336, -7.7088, 12.7661, -8.28479, 12.4336, -7.7088, 13.253, -6.28952, 10.4622, -9.41236, 9.97533, -11.4076, 9.31024, -11.4076, 9.97533, -11.4076, 10.4622, -9.41236, 10.7947, -9.98835, 10.7947, -9.98835, 12.7661, -9.41236, 12.4336, -9.98835, 13.253, -11.4076, 13.9181, -11.4076, 10.4622, -13.4029, 10.4622, -13.4029, 9.97533, -11.4076, 10.7947, -12.8269, 10.7947, -12.8269, 12.7661, -13.4029, 12.4336, -12.8269, 12.7661, -13.4029, 12.4336, -12.8269, 13.253, -11.4076),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 6, 9, 8, 9, 10, 8, 10, 11, 8, 12, 14, 13, 15, 17, 16, 13, 19, 18, 19, 11, 10, 19, 20, 18, 21, 23, 22, 24, 26, 25, 27, 29, 28, 30, 32, 31, 30, 33, 32, 33, 34, 32, 34, 35, 32, 25, 26, 36, 37, 39, 38, 40, 42, 41, 43, 45, 44, 42, 46, 41, 47, 49, 48, 50, 52, 51, 53, 55, 54, 56, 57, 50, 56, 58, 57, 58, 59, 57, 59, 60, 57, 51, 52, 61, 62, 64, 63, 61, 66, 65, 67, 60, 59, 66, 68, 65, 69, 71, 70, 72, 74, 73, 75, 77, 76, 78, 79, 72, 78, 80, 79, 80, 81, 79, 81, 82, 79, 73, 74, 83, 84, 86, 85, 83, 88, 87, 88, 82, 81, 88, 89, 87, 90, 92, 91)
	],
	"morph_arrays":[]
}

[node type="Spatial" name="Scene"]

[node name="kitchenStoveElectric(Clone)" type="MeshInstance" parent="."]

mesh = SubResource(13)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.214693, 0.324859, -0.169407)
